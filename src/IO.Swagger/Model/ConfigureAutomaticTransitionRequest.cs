/* 
 * Public - Security
 *
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ConfigureAutomaticTransitionRequest
    /// </summary>
    [DataContract]
    public partial class ConfigureAutomaticTransitionRequest :  IEquatable<ConfigureAutomaticTransitionRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigureAutomaticTransitionRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ConfigureAutomaticTransitionRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigureAutomaticTransitionRequest" /> class.
        /// </summary>
        /// <param name="AutomaticTransitions">AutomaticTransitions (required).</param>
        public ConfigureAutomaticTransitionRequest(List<AutomaticTransition> AutomaticTransitions = default(List<AutomaticTransition>))
        {
            // to ensure "AutomaticTransitions" is required (not null)
            if (AutomaticTransitions == null)
            {
                throw new InvalidDataException("AutomaticTransitions is a required property for ConfigureAutomaticTransitionRequest and cannot be null");
            }
            else
            {
                this.AutomaticTransitions = AutomaticTransitions;
            }
        }
        
        /// <summary>
        /// Gets or Sets AutomaticTransitions
        /// </summary>
        [DataMember(Name="automaticTransitions", EmitDefaultValue=false)]
        public List<AutomaticTransition> AutomaticTransitions { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConfigureAutomaticTransitionRequest {\n");
            sb.Append("  AutomaticTransitions: ").Append(AutomaticTransitions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ConfigureAutomaticTransitionRequest);
        }

        /// <summary>
        /// Returns true if ConfigureAutomaticTransitionRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of ConfigureAutomaticTransitionRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConfigureAutomaticTransitionRequest other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AutomaticTransitions == other.AutomaticTransitions ||
                    this.AutomaticTransitions != null &&
                    this.AutomaticTransitions.SequenceEqual(other.AutomaticTransitions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AutomaticTransitions != null)
                    hash = hash * 59 + this.AutomaticTransitions.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
