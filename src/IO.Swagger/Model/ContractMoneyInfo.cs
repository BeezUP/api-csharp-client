/* 
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Describe the pricing information related to the offer.
    /// </summary>
    [DataContract]
    public partial class ContractMoneyInfo :  IEquatable<ContractMoneyInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContractMoneyInfo" /> class.
        /// </summary>
        /// <param name="AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount">The amount excluding taxes and excluding code promo discount including billing period discount..</param>
        /// <param name="AmountExcludingTaxesIncludingDiscounts">The amount excluding taxes including discounts..</param>
        /// <param name="AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount">The taxes excluding discount including billing period discount..</param>
        /// <param name="AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount">The amount including taxes excluding discount including billing period discount..</param>
        /// <param name="CurrencyCode">CurrencyCode.</param>
        /// <param name="VatPercent">The VAT percent..</param>
        /// <param name="AmountExcludingTaxesIncludingDiscountsPerMonth">The amount excluding taxes including discounts per month..</param>
        /// <param name="AmountExcludingTaxesAndExcludingDiscounts">The amount excluding taxes and excluding discounts..</param>
        /// <param name="AmountTaxesIncludingDiscounts">Taxes including discounts..</param>
        /// <param name="AmountIncludingTaxesIncludingDiscounts">The amount including taxes including discounts..</param>
        /// <param name="InitialOfferFixedPrice">The initial offer fixed price..</param>
        public ContractMoneyInfo(double? AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount = default(double?), double? AmountExcludingTaxesIncludingDiscounts = default(double?), double? AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount = default(double?), double? AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount = default(double?), BeezUPCommonCurrencyCode CurrencyCode = default(BeezUPCommonCurrencyCode), double? VatPercent = default(double?), double? AmountExcludingTaxesIncludingDiscountsPerMonth = default(double?), double? AmountExcludingTaxesAndExcludingDiscounts = default(double?), double? AmountTaxesIncludingDiscounts = default(double?), double? AmountIncludingTaxesIncludingDiscounts = default(double?), double? InitialOfferFixedPrice = default(double?))
        {
            this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount = AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount;
            this.AmountExcludingTaxesIncludingDiscounts = AmountExcludingTaxesIncludingDiscounts;
            this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount = AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount;
            this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount = AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount;
            this.CurrencyCode = CurrencyCode;
            this.VatPercent = VatPercent;
            this.AmountExcludingTaxesIncludingDiscountsPerMonth = AmountExcludingTaxesIncludingDiscountsPerMonth;
            this.AmountExcludingTaxesAndExcludingDiscounts = AmountExcludingTaxesAndExcludingDiscounts;
            this.AmountTaxesIncludingDiscounts = AmountTaxesIncludingDiscounts;
            this.AmountIncludingTaxesIncludingDiscounts = AmountIncludingTaxesIncludingDiscounts;
            this.InitialOfferFixedPrice = InitialOfferFixedPrice;
        }
        
        /// <summary>
        /// The amount excluding taxes and excluding code promo discount including billing period discount.
        /// </summary>
        /// <value>The amount excluding taxes and excluding code promo discount including billing period discount.</value>
        [DataMember(Name="amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount", EmitDefaultValue=false)]
        public double? AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount { get; set; }
        /// <summary>
        /// The amount excluding taxes including discounts.
        /// </summary>
        /// <value>The amount excluding taxes including discounts.</value>
        [DataMember(Name="amountExcludingTaxesIncludingDiscounts", EmitDefaultValue=false)]
        public double? AmountExcludingTaxesIncludingDiscounts { get; set; }
        /// <summary>
        /// The taxes excluding discount including billing period discount.
        /// </summary>
        /// <value>The taxes excluding discount including billing period discount.</value>
        [DataMember(Name="amountTaxesExcludingDiscountIncludingBillingPeriodDiscount", EmitDefaultValue=false)]
        public double? AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount { get; set; }
        /// <summary>
        /// The amount including taxes excluding discount including billing period discount.
        /// </summary>
        /// <value>The amount including taxes excluding discount including billing period discount.</value>
        [DataMember(Name="amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount", EmitDefaultValue=false)]
        public double? AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount { get; set; }
        /// <summary>
        /// Gets or Sets CurrencyCode
        /// </summary>
        [DataMember(Name="currencyCode", EmitDefaultValue=false)]
        public BeezUPCommonCurrencyCode CurrencyCode { get; set; }
        /// <summary>
        /// The VAT percent.
        /// </summary>
        /// <value>The VAT percent.</value>
        [DataMember(Name="vatPercent", EmitDefaultValue=false)]
        public double? VatPercent { get; set; }
        /// <summary>
        /// The amount excluding taxes including discounts per month.
        /// </summary>
        /// <value>The amount excluding taxes including discounts per month.</value>
        [DataMember(Name="amountExcludingTaxesIncludingDiscountsPerMonth", EmitDefaultValue=false)]
        public double? AmountExcludingTaxesIncludingDiscountsPerMonth { get; set; }
        /// <summary>
        /// The amount excluding taxes and excluding discounts.
        /// </summary>
        /// <value>The amount excluding taxes and excluding discounts.</value>
        [DataMember(Name="amountExcludingTaxesAndExcludingDiscounts", EmitDefaultValue=false)]
        public double? AmountExcludingTaxesAndExcludingDiscounts { get; set; }
        /// <summary>
        /// Taxes including discounts.
        /// </summary>
        /// <value>Taxes including discounts.</value>
        [DataMember(Name="amountTaxesIncludingDiscounts", EmitDefaultValue=false)]
        public double? AmountTaxesIncludingDiscounts { get; set; }
        /// <summary>
        /// The amount including taxes including discounts.
        /// </summary>
        /// <value>The amount including taxes including discounts.</value>
        [DataMember(Name="amountIncludingTaxesIncludingDiscounts", EmitDefaultValue=false)]
        public double? AmountIncludingTaxesIncludingDiscounts { get; set; }
        /// <summary>
        /// The initial offer fixed price.
        /// </summary>
        /// <value>The initial offer fixed price.</value>
        [DataMember(Name="initialOfferFixedPrice", EmitDefaultValue=false)]
        public double? InitialOfferFixedPrice { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContractMoneyInfo {\n");
            sb.Append("  AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount: ").Append(AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount).Append("\n");
            sb.Append("  AmountExcludingTaxesIncludingDiscounts: ").Append(AmountExcludingTaxesIncludingDiscounts).Append("\n");
            sb.Append("  AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount: ").Append(AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount).Append("\n");
            sb.Append("  AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount: ").Append(AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  VatPercent: ").Append(VatPercent).Append("\n");
            sb.Append("  AmountExcludingTaxesIncludingDiscountsPerMonth: ").Append(AmountExcludingTaxesIncludingDiscountsPerMonth).Append("\n");
            sb.Append("  AmountExcludingTaxesAndExcludingDiscounts: ").Append(AmountExcludingTaxesAndExcludingDiscounts).Append("\n");
            sb.Append("  AmountTaxesIncludingDiscounts: ").Append(AmountTaxesIncludingDiscounts).Append("\n");
            sb.Append("  AmountIncludingTaxesIncludingDiscounts: ").Append(AmountIncludingTaxesIncludingDiscounts).Append("\n");
            sb.Append("  InitialOfferFixedPrice: ").Append(InitialOfferFixedPrice).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ContractMoneyInfo);
        }

        /// <summary>
        /// Returns true if ContractMoneyInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of ContractMoneyInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContractMoneyInfo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount == other.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount ||
                    this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount != null &&
                    this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount.Equals(other.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount)
                ) && 
                (
                    this.AmountExcludingTaxesIncludingDiscounts == other.AmountExcludingTaxesIncludingDiscounts ||
                    this.AmountExcludingTaxesIncludingDiscounts != null &&
                    this.AmountExcludingTaxesIncludingDiscounts.Equals(other.AmountExcludingTaxesIncludingDiscounts)
                ) && 
                (
                    this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount == other.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount ||
                    this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount != null &&
                    this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount.Equals(other.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount)
                ) && 
                (
                    this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount == other.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount ||
                    this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount != null &&
                    this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount.Equals(other.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount)
                ) && 
                (
                    this.CurrencyCode == other.CurrencyCode ||
                    this.CurrencyCode != null &&
                    this.CurrencyCode.Equals(other.CurrencyCode)
                ) && 
                (
                    this.VatPercent == other.VatPercent ||
                    this.VatPercent != null &&
                    this.VatPercent.Equals(other.VatPercent)
                ) && 
                (
                    this.AmountExcludingTaxesIncludingDiscountsPerMonth == other.AmountExcludingTaxesIncludingDiscountsPerMonth ||
                    this.AmountExcludingTaxesIncludingDiscountsPerMonth != null &&
                    this.AmountExcludingTaxesIncludingDiscountsPerMonth.Equals(other.AmountExcludingTaxesIncludingDiscountsPerMonth)
                ) && 
                (
                    this.AmountExcludingTaxesAndExcludingDiscounts == other.AmountExcludingTaxesAndExcludingDiscounts ||
                    this.AmountExcludingTaxesAndExcludingDiscounts != null &&
                    this.AmountExcludingTaxesAndExcludingDiscounts.Equals(other.AmountExcludingTaxesAndExcludingDiscounts)
                ) && 
                (
                    this.AmountTaxesIncludingDiscounts == other.AmountTaxesIncludingDiscounts ||
                    this.AmountTaxesIncludingDiscounts != null &&
                    this.AmountTaxesIncludingDiscounts.Equals(other.AmountTaxesIncludingDiscounts)
                ) && 
                (
                    this.AmountIncludingTaxesIncludingDiscounts == other.AmountIncludingTaxesIncludingDiscounts ||
                    this.AmountIncludingTaxesIncludingDiscounts != null &&
                    this.AmountIncludingTaxesIncludingDiscounts.Equals(other.AmountIncludingTaxesIncludingDiscounts)
                ) && 
                (
                    this.InitialOfferFixedPrice == other.InitialOfferFixedPrice ||
                    this.InitialOfferFixedPrice != null &&
                    this.InitialOfferFixedPrice.Equals(other.InitialOfferFixedPrice)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount != null)
                    hash = hash * 59 + this.AmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount.GetHashCode();
                if (this.AmountExcludingTaxesIncludingDiscounts != null)
                    hash = hash * 59 + this.AmountExcludingTaxesIncludingDiscounts.GetHashCode();
                if (this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount != null)
                    hash = hash * 59 + this.AmountTaxesExcludingDiscountIncludingBillingPeriodDiscount.GetHashCode();
                if (this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount != null)
                    hash = hash * 59 + this.AmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount.GetHashCode();
                if (this.CurrencyCode != null)
                    hash = hash * 59 + this.CurrencyCode.GetHashCode();
                if (this.VatPercent != null)
                    hash = hash * 59 + this.VatPercent.GetHashCode();
                if (this.AmountExcludingTaxesIncludingDiscountsPerMonth != null)
                    hash = hash * 59 + this.AmountExcludingTaxesIncludingDiscountsPerMonth.GetHashCode();
                if (this.AmountExcludingTaxesAndExcludingDiscounts != null)
                    hash = hash * 59 + this.AmountExcludingTaxesAndExcludingDiscounts.GetHashCode();
                if (this.AmountTaxesIncludingDiscounts != null)
                    hash = hash * 59 + this.AmountTaxesIncludingDiscounts.GetHashCode();
                if (this.AmountIncludingTaxesIncludingDiscounts != null)
                    hash = hash * 59 + this.AmountIncludingTaxesIncludingDiscounts.GetHashCode();
                if (this.InitialOfferFixedPrice != null)
                    hash = hash * 59 + this.InitialOfferFixedPrice.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
