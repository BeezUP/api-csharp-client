/* 
 * BeezUP API
 *
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// RuleExecutionReportings
    /// </summary>
    [DataContract]
    public partial class RuleExecutionReportings :  IEquatable<RuleExecutionReportings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RuleExecutionReportings" /> class.
        /// </summary>
        /// <param name="Executions">The rules executions history.</param>
        /// <param name="PaginationResult">PaginationResult.</param>
        public RuleExecutionReportings(List<RuleExecutionReporting> Executions = default(List<RuleExecutionReporting>), BeezUPCommonPaginationResult PaginationResult = default(BeezUPCommonPaginationResult))
        {
            this.Executions = Executions;
            this.PaginationResult = PaginationResult;
        }
        
        /// <summary>
        /// The rules executions history
        /// </summary>
        /// <value>The rules executions history</value>
        [DataMember(Name="executions", EmitDefaultValue=false)]
        public List<RuleExecutionReporting> Executions { get; set; }
        /// <summary>
        /// Gets or Sets PaginationResult
        /// </summary>
        [DataMember(Name="paginationResult", EmitDefaultValue=false)]
        public BeezUPCommonPaginationResult PaginationResult { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RuleExecutionReportings {\n");
            sb.Append("  Executions: ").Append(Executions).Append("\n");
            sb.Append("  PaginationResult: ").Append(PaginationResult).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as RuleExecutionReportings);
        }

        /// <summary>
        /// Returns true if RuleExecutionReportings instances are equal
        /// </summary>
        /// <param name="other">Instance of RuleExecutionReportings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RuleExecutionReportings other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Executions == other.Executions ||
                    this.Executions != null &&
                    this.Executions.SequenceEqual(other.Executions)
                ) && 
                (
                    this.PaginationResult == other.PaginationResult ||
                    this.PaginationResult != null &&
                    this.PaginationResult.Equals(other.PaginationResult)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Executions != null)
                    hash = hash * 59 + this.Executions.GetHashCode();
                if (this.PaginationResult != null)
                    hash = hash * 59 + this.PaginationResult.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
