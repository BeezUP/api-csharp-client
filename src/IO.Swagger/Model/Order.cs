/* 
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Order
    /// </summary>
    [DataContract]
    public partial class Order :  IEquatable<Order>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Order" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Order() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Order" /> class.
        /// </summary>
        /// <param name="MarketplaceTechnicalCode">MarketplaceTechnicalCode (required).</param>
        /// <param name="AccountId">AccountId (required).</param>
        /// <param name="BeezUPOrderId">BeezUPOrderId (required).</param>
        /// <param name="BeezUPOrderUrl">BeezUPOrderUrl.</param>
        /// <param name="MarketplaceBusinessCode">MarketplaceBusinessCode (required).</param>
        /// <param name="OrderMarketplaceOrderId">OrderMarketplaceOrderId (required).</param>
        /// <param name="OrderStatusBeezUPOrderStatus">OrderStatusBeezUPOrderStatus (required).</param>
        /// <param name="OrderStatusMarketplaceOrderStatus">OrderStatusMarketplaceOrderStatus.</param>
        /// <param name="OrderMerchantOrderId">OrderMerchantOrderId.</param>
        /// <param name="OrderMerchantECommerceSoftwareName">OrderMerchantECommerceSoftwareName.</param>
        /// <param name="OrderMerchantECommerceSoftwareVersion">OrderMerchantECommerceSoftwareVersion.</param>
        /// <param name="OrderPurchaseUtcDate">The purchase date of this order (required).</param>
        /// <param name="OrderLastModificationUtcDate">The last modification UTC date done by BeezUP of this order (required).</param>
        /// <param name="OrderMarketplaceLastModificationUtcDate">The last modification UTC date done by the marketplace on this order (required).</param>
        /// <param name="OrderBuyerName">OrderBuyerName.</param>
        /// <param name="OrderTotalPrice">The total price of this order (corresponding to the amount paid by the customer).</param>
        /// <param name="OrderCurrencyCode">OrderCurrencyCode.</param>
        /// <param name="Processing">Processing (required).</param>
        /// <param name="Etag">Etag (required).</param>
        /// <param name="Links">Links (required).</param>
        /// <param name="OrderMarketPlaceChannel">Useful to identify the origin of the order. For example in Amazon..</param>
        /// <param name="OrderTotalTax">The total tax of this order.</param>
        /// <param name="OrderTotalCommission">The total commission of this order.</param>
        /// <param name="OrderPaymentMethod">The payment method of this order.</param>
        /// <param name="OrderPayingUtcDate">The UTC date of the payment of this order.</param>
        /// <param name="OrderComment">The comment associated to this order.</param>
        /// <param name="OrderShippingCivility">The civility of the person in the shipping address for this order.</param>
        /// <param name="OrderShippingCompanyName">The company name of the shipping address for this order.</param>
        /// <param name="OrderShippingAddressName">The name of the person in the shipping address for this order.</param>
        /// <param name="OrderShippingEmail">The email of the person in the shipping address for this order.</param>
        /// <param name="OrderShippingAddressLine1">The shipping address line 1 of this order.</param>
        /// <param name="OrderShippingAddressLine2">The shipping address line 2 of this order.</param>
        /// <param name="OrderShippingAddressLine3">The shipping address line 3 of this order.</param>
        /// <param name="OrderShippingAddressPostalCode">The shipping address postal code of this order.</param>
        /// <param name="OrderShippingAddressCity">The shipping address city of this order.</param>
        /// <param name="OrderShippingAddressStateOrRegion">The shipping address state or region of this order.</param>
        /// <param name="OrderShippingAddressCountryName">The shipping address country name.</param>
        /// <param name="OrderShippingAddressCountryIsoCodeAlpha2">The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details).</param>
        /// <param name="OrderShippingPhone">The phone number of the person in the shipping address for this order.</param>
        /// <param name="OrderShippingMobilePhone">The mobile phone number of the person in the shipping address for this order.</param>
        /// <param name="OrderShippingPrice">The shipping price of this order.</param>
        /// <param name="OrderShippingMethod">The shipping method of this order.</param>
        /// <param name="OrderShippingShippingTax">The shipping tax for this order.</param>
        /// <param name="OrderShippingEarliestShipUtcDate">The UTC date of the earliest ship for this order.</param>
        /// <param name="OrderShippingLatestShipUtcDate">The UTC date of the latest ship for this order.</param>
        /// <param name="OrderBuyerIdentifier">The buyer identifier for this order.</param>
        /// <param name="OrderBuyerCivility">The buyer civility for this order.</param>
        /// <param name="OrderBuyerCompanyName">The buyer company name for this order.</param>
        /// <param name="OrderBuyerEmail">The email of the buyer for this order.</param>
        /// <param name="OrderBuyerAddressLine1">The Buyer address line 1 of this order.</param>
        /// <param name="OrderBuyerAddressLine2">The Buyer address line 2 of this order.</param>
        /// <param name="OrderBuyerAddressLine3">The Buyer address line 3 of this order.</param>
        /// <param name="OrderBuyerAddressPostalCode">The Buyer address postal code of this order.</param>
        /// <param name="OrderBuyerAddressCity">The Buyer address city of this order.</param>
        /// <param name="OrderBuyerAddressStateOrRegion">The Buyer address state or region of this order.</param>
        /// <param name="OrderBuyerAddressCountryName">The Buyer address country name.</param>
        /// <param name="OrderBuyerAddressCountryIsoCodeAlpha2">The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details).</param>
        /// <param name="OrderBuyerPhone">The phone number of the buyer for this order.</param>
        /// <param name="OrderBuyerMobilePhone">The mobile phone number of the buyer for this order.</param>
        /// <param name="OrderOrderSourceUri">Technical information: The url to the source of this order. We received this information from the marketplace. .</param>
        /// <param name="OrderOrderItemsSourceUri">Technical information: The url to the source of this order items. We received this information from the marketplace. .</param>
        /// <param name="OrderItems">OrderItems (required).</param>
        /// <param name="TransitionLinks">TransitionLinks (required).</param>
        public Order(MarketplaceTechnicalCode MarketplaceTechnicalCode = default(MarketplaceTechnicalCode), AccountId AccountId = default(AccountId), BeezUPOrderId BeezUPOrderId = default(BeezUPOrderId), BeezUPCommonHttpUrl BeezUPOrderUrl = default(BeezUPCommonHttpUrl), MarketplaceBusinessCode MarketplaceBusinessCode = default(MarketplaceBusinessCode), MarketplaceOrderId OrderMarketplaceOrderId = default(MarketplaceOrderId), BeezUPOrderStatus OrderStatusBeezUPOrderStatus = default(BeezUPOrderStatus), MarketplaceOrderStatus OrderStatusMarketplaceOrderStatus = default(MarketplaceOrderStatus), OrderMerchantOrderId OrderMerchantOrderId = default(OrderMerchantOrderId), OrderMerchantECommerceSoftwareName OrderMerchantECommerceSoftwareName = default(OrderMerchantECommerceSoftwareName), OrderMerchantECommerceSoftwareVersion OrderMerchantECommerceSoftwareVersion = default(OrderMerchantECommerceSoftwareVersion), DateTime? OrderPurchaseUtcDate = default(DateTime?), DateTime? OrderLastModificationUtcDate = default(DateTime?), DateTime? OrderMarketplaceLastModificationUtcDate = default(DateTime?), OrderBuyerName OrderBuyerName = default(OrderBuyerName), decimal? OrderTotalPrice = default(decimal?), BeezUPCommonCurrencyCode OrderCurrencyCode = default(BeezUPCommonCurrencyCode), Processing Processing = default(Processing), Etag Etag = default(Etag), OrderLinks Links = default(OrderLinks), string OrderMarketPlaceChannel = default(string), decimal? OrderTotalTax = default(decimal?), decimal? OrderTotalCommission = default(decimal?), string OrderPaymentMethod = default(string), DateTime? OrderPayingUtcDate = default(DateTime?), string OrderComment = default(string), string OrderShippingCivility = default(string), string OrderShippingCompanyName = default(string), string OrderShippingAddressName = default(string), string OrderShippingEmail = default(string), string OrderShippingAddressLine1 = default(string), string OrderShippingAddressLine2 = default(string), string OrderShippingAddressLine3 = default(string), string OrderShippingAddressPostalCode = default(string), string OrderShippingAddressCity = default(string), string OrderShippingAddressStateOrRegion = default(string), string OrderShippingAddressCountryName = default(string), string OrderShippingAddressCountryIsoCodeAlpha2 = default(string), string OrderShippingPhone = default(string), string OrderShippingMobilePhone = default(string), decimal? OrderShippingPrice = default(decimal?), string OrderShippingMethod = default(string), decimal? OrderShippingShippingTax = default(decimal?), DateTime? OrderShippingEarliestShipUtcDate = default(DateTime?), DateTime? OrderShippingLatestShipUtcDate = default(DateTime?), string OrderBuyerIdentifier = default(string), string OrderBuyerCivility = default(string), string OrderBuyerCompanyName = default(string), string OrderBuyerEmail = default(string), string OrderBuyerAddressLine1 = default(string), string OrderBuyerAddressLine2 = default(string), string OrderBuyerAddressLine3 = default(string), string OrderBuyerAddressPostalCode = default(string), string OrderBuyerAddressCity = default(string), string OrderBuyerAddressStateOrRegion = default(string), string OrderBuyerAddressCountryName = default(string), string OrderBuyerAddressCountryIsoCodeAlpha2 = default(string), string OrderBuyerPhone = default(string), string OrderBuyerMobilePhone = default(string), string OrderOrderSourceUri = default(string), string OrderOrderItemsSourceUri = default(string), List<OrderItem> OrderItems = default(List<OrderItem>), OrderTransitionLinks TransitionLinks = default(OrderTransitionLinks))
        {
            // to ensure "MarketplaceTechnicalCode" is required (not null)
            if (MarketplaceTechnicalCode == null)
            {
                throw new InvalidDataException("MarketplaceTechnicalCode is a required property for Order and cannot be null");
            }
            else
            {
                this.MarketplaceTechnicalCode = MarketplaceTechnicalCode;
            }
            // to ensure "AccountId" is required (not null)
            if (AccountId == null)
            {
                throw new InvalidDataException("AccountId is a required property for Order and cannot be null");
            }
            else
            {
                this.AccountId = AccountId;
            }
            // to ensure "BeezUPOrderId" is required (not null)
            if (BeezUPOrderId == null)
            {
                throw new InvalidDataException("BeezUPOrderId is a required property for Order and cannot be null");
            }
            else
            {
                this.BeezUPOrderId = BeezUPOrderId;
            }
            // to ensure "MarketplaceBusinessCode" is required (not null)
            if (MarketplaceBusinessCode == null)
            {
                throw new InvalidDataException("MarketplaceBusinessCode is a required property for Order and cannot be null");
            }
            else
            {
                this.MarketplaceBusinessCode = MarketplaceBusinessCode;
            }
            // to ensure "OrderMarketplaceOrderId" is required (not null)
            if (OrderMarketplaceOrderId == null)
            {
                throw new InvalidDataException("OrderMarketplaceOrderId is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderMarketplaceOrderId = OrderMarketplaceOrderId;
            }
            // to ensure "OrderStatusBeezUPOrderStatus" is required (not null)
            if (OrderStatusBeezUPOrderStatus == null)
            {
                throw new InvalidDataException("OrderStatusBeezUPOrderStatus is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderStatusBeezUPOrderStatus = OrderStatusBeezUPOrderStatus;
            }
            // to ensure "OrderPurchaseUtcDate" is required (not null)
            if (OrderPurchaseUtcDate == null)
            {
                throw new InvalidDataException("OrderPurchaseUtcDate is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderPurchaseUtcDate = OrderPurchaseUtcDate;
            }
            // to ensure "OrderLastModificationUtcDate" is required (not null)
            if (OrderLastModificationUtcDate == null)
            {
                throw new InvalidDataException("OrderLastModificationUtcDate is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderLastModificationUtcDate = OrderLastModificationUtcDate;
            }
            // to ensure "OrderMarketplaceLastModificationUtcDate" is required (not null)
            if (OrderMarketplaceLastModificationUtcDate == null)
            {
                throw new InvalidDataException("OrderMarketplaceLastModificationUtcDate is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderMarketplaceLastModificationUtcDate = OrderMarketplaceLastModificationUtcDate;
            }
            // to ensure "Processing" is required (not null)
            if (Processing == null)
            {
                throw new InvalidDataException("Processing is a required property for Order and cannot be null");
            }
            else
            {
                this.Processing = Processing;
            }
            // to ensure "Etag" is required (not null)
            if (Etag == null)
            {
                throw new InvalidDataException("Etag is a required property for Order and cannot be null");
            }
            else
            {
                this.Etag = Etag;
            }
            // to ensure "Links" is required (not null)
            if (Links == null)
            {
                throw new InvalidDataException("Links is a required property for Order and cannot be null");
            }
            else
            {
                this.Links = Links;
            }
            // to ensure "OrderItems" is required (not null)
            if (OrderItems == null)
            {
                throw new InvalidDataException("OrderItems is a required property for Order and cannot be null");
            }
            else
            {
                this.OrderItems = OrderItems;
            }
            // to ensure "TransitionLinks" is required (not null)
            if (TransitionLinks == null)
            {
                throw new InvalidDataException("TransitionLinks is a required property for Order and cannot be null");
            }
            else
            {
                this.TransitionLinks = TransitionLinks;
            }
            this.BeezUPOrderUrl = BeezUPOrderUrl;
            this.OrderStatusMarketplaceOrderStatus = OrderStatusMarketplaceOrderStatus;
            this.OrderMerchantOrderId = OrderMerchantOrderId;
            this.OrderMerchantECommerceSoftwareName = OrderMerchantECommerceSoftwareName;
            this.OrderMerchantECommerceSoftwareVersion = OrderMerchantECommerceSoftwareVersion;
            this.OrderBuyerName = OrderBuyerName;
            this.OrderTotalPrice = OrderTotalPrice;
            this.OrderCurrencyCode = OrderCurrencyCode;
            this.OrderMarketPlaceChannel = OrderMarketPlaceChannel;
            this.OrderTotalTax = OrderTotalTax;
            this.OrderTotalCommission = OrderTotalCommission;
            this.OrderPaymentMethod = OrderPaymentMethod;
            this.OrderPayingUtcDate = OrderPayingUtcDate;
            this.OrderComment = OrderComment;
            this.OrderShippingCivility = OrderShippingCivility;
            this.OrderShippingCompanyName = OrderShippingCompanyName;
            this.OrderShippingAddressName = OrderShippingAddressName;
            this.OrderShippingEmail = OrderShippingEmail;
            this.OrderShippingAddressLine1 = OrderShippingAddressLine1;
            this.OrderShippingAddressLine2 = OrderShippingAddressLine2;
            this.OrderShippingAddressLine3 = OrderShippingAddressLine3;
            this.OrderShippingAddressPostalCode = OrderShippingAddressPostalCode;
            this.OrderShippingAddressCity = OrderShippingAddressCity;
            this.OrderShippingAddressStateOrRegion = OrderShippingAddressStateOrRegion;
            this.OrderShippingAddressCountryName = OrderShippingAddressCountryName;
            this.OrderShippingAddressCountryIsoCodeAlpha2 = OrderShippingAddressCountryIsoCodeAlpha2;
            this.OrderShippingPhone = OrderShippingPhone;
            this.OrderShippingMobilePhone = OrderShippingMobilePhone;
            this.OrderShippingPrice = OrderShippingPrice;
            this.OrderShippingMethod = OrderShippingMethod;
            this.OrderShippingShippingTax = OrderShippingShippingTax;
            this.OrderShippingEarliestShipUtcDate = OrderShippingEarliestShipUtcDate;
            this.OrderShippingLatestShipUtcDate = OrderShippingLatestShipUtcDate;
            this.OrderBuyerIdentifier = OrderBuyerIdentifier;
            this.OrderBuyerCivility = OrderBuyerCivility;
            this.OrderBuyerCompanyName = OrderBuyerCompanyName;
            this.OrderBuyerEmail = OrderBuyerEmail;
            this.OrderBuyerAddressLine1 = OrderBuyerAddressLine1;
            this.OrderBuyerAddressLine2 = OrderBuyerAddressLine2;
            this.OrderBuyerAddressLine3 = OrderBuyerAddressLine3;
            this.OrderBuyerAddressPostalCode = OrderBuyerAddressPostalCode;
            this.OrderBuyerAddressCity = OrderBuyerAddressCity;
            this.OrderBuyerAddressStateOrRegion = OrderBuyerAddressStateOrRegion;
            this.OrderBuyerAddressCountryName = OrderBuyerAddressCountryName;
            this.OrderBuyerAddressCountryIsoCodeAlpha2 = OrderBuyerAddressCountryIsoCodeAlpha2;
            this.OrderBuyerPhone = OrderBuyerPhone;
            this.OrderBuyerMobilePhone = OrderBuyerMobilePhone;
            this.OrderOrderSourceUri = OrderOrderSourceUri;
            this.OrderOrderItemsSourceUri = OrderOrderItemsSourceUri;
        }
        
        /// <summary>
        /// Gets or Sets MarketplaceTechnicalCode
        /// </summary>
        [DataMember(Name="marketplaceTechnicalCode", EmitDefaultValue=false)]
        public MarketplaceTechnicalCode MarketplaceTechnicalCode { get; set; }
        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [DataMember(Name="accountId", EmitDefaultValue=false)]
        public AccountId AccountId { get; set; }
        /// <summary>
        /// Gets or Sets BeezUPOrderId
        /// </summary>
        [DataMember(Name="beezUPOrderId", EmitDefaultValue=false)]
        public BeezUPOrderId BeezUPOrderId { get; set; }
        /// <summary>
        /// Gets or Sets BeezUPOrderUrl
        /// </summary>
        [DataMember(Name="beezUPOrderUrl", EmitDefaultValue=false)]
        public BeezUPCommonHttpUrl BeezUPOrderUrl { get; set; }
        /// <summary>
        /// Gets or Sets MarketplaceBusinessCode
        /// </summary>
        [DataMember(Name="marketplaceBusinessCode", EmitDefaultValue=false)]
        public MarketplaceBusinessCode MarketplaceBusinessCode { get; set; }
        /// <summary>
        /// Gets or Sets OrderMarketplaceOrderId
        /// </summary>
        [DataMember(Name="order_MarketplaceOrderId", EmitDefaultValue=false)]
        public MarketplaceOrderId OrderMarketplaceOrderId { get; set; }
        /// <summary>
        /// Gets or Sets OrderStatusBeezUPOrderStatus
        /// </summary>
        [DataMember(Name="order_Status_BeezUPOrderStatus", EmitDefaultValue=false)]
        public BeezUPOrderStatus OrderStatusBeezUPOrderStatus { get; set; }
        /// <summary>
        /// Gets or Sets OrderStatusMarketplaceOrderStatus
        /// </summary>
        [DataMember(Name="order_Status_MarketplaceOrderStatus", EmitDefaultValue=false)]
        public MarketplaceOrderStatus OrderStatusMarketplaceOrderStatus { get; set; }
        /// <summary>
        /// Gets or Sets OrderMerchantOrderId
        /// </summary>
        [DataMember(Name="order_MerchantOrderId", EmitDefaultValue=false)]
        public OrderMerchantOrderId OrderMerchantOrderId { get; set; }
        /// <summary>
        /// Gets or Sets OrderMerchantECommerceSoftwareName
        /// </summary>
        [DataMember(Name="order_MerchantECommerceSoftwareName", EmitDefaultValue=false)]
        public OrderMerchantECommerceSoftwareName OrderMerchantECommerceSoftwareName { get; set; }
        /// <summary>
        /// Gets or Sets OrderMerchantECommerceSoftwareVersion
        /// </summary>
        [DataMember(Name="order_MerchantECommerceSoftwareVersion", EmitDefaultValue=false)]
        public OrderMerchantECommerceSoftwareVersion OrderMerchantECommerceSoftwareVersion { get; set; }
        /// <summary>
        /// The purchase date of this order
        /// </summary>
        /// <value>The purchase date of this order</value>
        [DataMember(Name="order_PurchaseUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderPurchaseUtcDate { get; set; }
        /// <summary>
        /// The last modification UTC date done by BeezUP of this order
        /// </summary>
        /// <value>The last modification UTC date done by BeezUP of this order</value>
        [DataMember(Name="order_LastModificationUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderLastModificationUtcDate { get; set; }
        /// <summary>
        /// The last modification UTC date done by the marketplace on this order
        /// </summary>
        /// <value>The last modification UTC date done by the marketplace on this order</value>
        [DataMember(Name="order_MarketplaceLastModificationUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderMarketplaceLastModificationUtcDate { get; set; }
        /// <summary>
        /// Gets or Sets OrderBuyerName
        /// </summary>
        [DataMember(Name="order_Buyer_Name", EmitDefaultValue=false)]
        public OrderBuyerName OrderBuyerName { get; set; }
        /// <summary>
        /// The total price of this order (corresponding to the amount paid by the customer)
        /// </summary>
        /// <value>The total price of this order (corresponding to the amount paid by the customer)</value>
        [DataMember(Name="order_TotalPrice", EmitDefaultValue=false)]
        public decimal? OrderTotalPrice { get; set; }
        /// <summary>
        /// Gets or Sets OrderCurrencyCode
        /// </summary>
        [DataMember(Name="order_CurrencyCode", EmitDefaultValue=false)]
        public BeezUPCommonCurrencyCode OrderCurrencyCode { get; set; }
        /// <summary>
        /// Gets or Sets Processing
        /// </summary>
        [DataMember(Name="processing", EmitDefaultValue=false)]
        public Processing Processing { get; set; }
        /// <summary>
        /// Gets or Sets Etag
        /// </summary>
        [DataMember(Name="etag", EmitDefaultValue=false)]
        public Etag Etag { get; set; }
        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public OrderLinks Links { get; set; }
        /// <summary>
        /// Useful to identify the origin of the order. For example in Amazon.
        /// </summary>
        /// <value>Useful to identify the origin of the order. For example in Amazon.</value>
        [DataMember(Name="order_MarketPlaceChannel", EmitDefaultValue=false)]
        public string OrderMarketPlaceChannel { get; set; }
        /// <summary>
        /// The total tax of this order
        /// </summary>
        /// <value>The total tax of this order</value>
        [DataMember(Name="order_TotalTax", EmitDefaultValue=false)]
        public decimal? OrderTotalTax { get; set; }
        /// <summary>
        /// The total commission of this order
        /// </summary>
        /// <value>The total commission of this order</value>
        [DataMember(Name="order_TotalCommission", EmitDefaultValue=false)]
        public decimal? OrderTotalCommission { get; set; }
        /// <summary>
        /// The payment method of this order
        /// </summary>
        /// <value>The payment method of this order</value>
        [DataMember(Name="order_PaymentMethod", EmitDefaultValue=false)]
        public string OrderPaymentMethod { get; set; }
        /// <summary>
        /// The UTC date of the payment of this order
        /// </summary>
        /// <value>The UTC date of the payment of this order</value>
        [DataMember(Name="order_PayingUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderPayingUtcDate { get; set; }
        /// <summary>
        /// The comment associated to this order
        /// </summary>
        /// <value>The comment associated to this order</value>
        [DataMember(Name="order_Comment", EmitDefaultValue=false)]
        public string OrderComment { get; set; }
        /// <summary>
        /// The civility of the person in the shipping address for this order
        /// </summary>
        /// <value>The civility of the person in the shipping address for this order</value>
        [DataMember(Name="order_Shipping_Civility", EmitDefaultValue=false)]
        public string OrderShippingCivility { get; set; }
        /// <summary>
        /// The company name of the shipping address for this order
        /// </summary>
        /// <value>The company name of the shipping address for this order</value>
        [DataMember(Name="order_Shipping_CompanyName", EmitDefaultValue=false)]
        public string OrderShippingCompanyName { get; set; }
        /// <summary>
        /// The name of the person in the shipping address for this order
        /// </summary>
        /// <value>The name of the person in the shipping address for this order</value>
        [DataMember(Name="order_Shipping_AddressName", EmitDefaultValue=false)]
        public string OrderShippingAddressName { get; set; }
        /// <summary>
        /// The email of the person in the shipping address for this order
        /// </summary>
        /// <value>The email of the person in the shipping address for this order</value>
        [DataMember(Name="order_Shipping_Email", EmitDefaultValue=false)]
        public string OrderShippingEmail { get; set; }
        /// <summary>
        /// The shipping address line 1 of this order
        /// </summary>
        /// <value>The shipping address line 1 of this order</value>
        [DataMember(Name="order_Shipping_AddressLine1", EmitDefaultValue=false)]
        public string OrderShippingAddressLine1 { get; set; }
        /// <summary>
        /// The shipping address line 2 of this order
        /// </summary>
        /// <value>The shipping address line 2 of this order</value>
        [DataMember(Name="order_Shipping_AddressLine2", EmitDefaultValue=false)]
        public string OrderShippingAddressLine2 { get; set; }
        /// <summary>
        /// The shipping address line 3 of this order
        /// </summary>
        /// <value>The shipping address line 3 of this order</value>
        [DataMember(Name="order_Shipping_AddressLine3", EmitDefaultValue=false)]
        public string OrderShippingAddressLine3 { get; set; }
        /// <summary>
        /// The shipping address postal code of this order
        /// </summary>
        /// <value>The shipping address postal code of this order</value>
        [DataMember(Name="order_Shipping_AddressPostalCode", EmitDefaultValue=false)]
        public string OrderShippingAddressPostalCode { get; set; }
        /// <summary>
        /// The shipping address city of this order
        /// </summary>
        /// <value>The shipping address city of this order</value>
        [DataMember(Name="order_Shipping_AddressCity", EmitDefaultValue=false)]
        public string OrderShippingAddressCity { get; set; }
        /// <summary>
        /// The shipping address state or region of this order
        /// </summary>
        /// <value>The shipping address state or region of this order</value>
        [DataMember(Name="order_Shipping_AddressStateOrRegion", EmitDefaultValue=false)]
        public string OrderShippingAddressStateOrRegion { get; set; }
        /// <summary>
        /// The shipping address country name
        /// </summary>
        /// <value>The shipping address country name</value>
        [DataMember(Name="order_Shipping_AddressCountryName", EmitDefaultValue=false)]
        public string OrderShippingAddressCountryName { get; set; }
        /// <summary>
        /// The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)
        /// </summary>
        /// <value>The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)</value>
        [DataMember(Name="order_Shipping_AddressCountryIsoCodeAlpha2", EmitDefaultValue=false)]
        public string OrderShippingAddressCountryIsoCodeAlpha2 { get; set; }
        /// <summary>
        /// The phone number of the person in the shipping address for this order
        /// </summary>
        /// <value>The phone number of the person in the shipping address for this order</value>
        [DataMember(Name="order_Shipping_Phone", EmitDefaultValue=false)]
        public string OrderShippingPhone { get; set; }
        /// <summary>
        /// The mobile phone number of the person in the shipping address for this order
        /// </summary>
        /// <value>The mobile phone number of the person in the shipping address for this order</value>
        [DataMember(Name="order_Shipping_MobilePhone", EmitDefaultValue=false)]
        public string OrderShippingMobilePhone { get; set; }
        /// <summary>
        /// The shipping price of this order
        /// </summary>
        /// <value>The shipping price of this order</value>
        [DataMember(Name="order_Shipping_Price", EmitDefaultValue=false)]
        public decimal? OrderShippingPrice { get; set; }
        /// <summary>
        /// The shipping method of this order
        /// </summary>
        /// <value>The shipping method of this order</value>
        [DataMember(Name="order_Shipping_Method", EmitDefaultValue=false)]
        public string OrderShippingMethod { get; set; }
        /// <summary>
        /// The shipping tax for this order
        /// </summary>
        /// <value>The shipping tax for this order</value>
        [DataMember(Name="order_Shipping_ShippingTax", EmitDefaultValue=false)]
        public decimal? OrderShippingShippingTax { get; set; }
        /// <summary>
        /// The UTC date of the earliest ship for this order
        /// </summary>
        /// <value>The UTC date of the earliest ship for this order</value>
        [DataMember(Name="order_Shipping_EarliestShipUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderShippingEarliestShipUtcDate { get; set; }
        /// <summary>
        /// The UTC date of the latest ship for this order
        /// </summary>
        /// <value>The UTC date of the latest ship for this order</value>
        [DataMember(Name="order_Shipping_LatestShipUtcDate", EmitDefaultValue=false)]
        public DateTime? OrderShippingLatestShipUtcDate { get; set; }
        /// <summary>
        /// The buyer identifier for this order
        /// </summary>
        /// <value>The buyer identifier for this order</value>
        [DataMember(Name="order_Buyer_Identifier", EmitDefaultValue=false)]
        public string OrderBuyerIdentifier { get; set; }
        /// <summary>
        /// The buyer civility for this order
        /// </summary>
        /// <value>The buyer civility for this order</value>
        [DataMember(Name="order_Buyer_Civility", EmitDefaultValue=false)]
        public string OrderBuyerCivility { get; set; }
        /// <summary>
        /// The buyer company name for this order
        /// </summary>
        /// <value>The buyer company name for this order</value>
        [DataMember(Name="order_Buyer_CompanyName", EmitDefaultValue=false)]
        public string OrderBuyerCompanyName { get; set; }
        /// <summary>
        /// The email of the buyer for this order
        /// </summary>
        /// <value>The email of the buyer for this order</value>
        [DataMember(Name="order_Buyer_Email", EmitDefaultValue=false)]
        public string OrderBuyerEmail { get; set; }
        /// <summary>
        /// The Buyer address line 1 of this order
        /// </summary>
        /// <value>The Buyer address line 1 of this order</value>
        [DataMember(Name="order_Buyer_AddressLine1", EmitDefaultValue=false)]
        public string OrderBuyerAddressLine1 { get; set; }
        /// <summary>
        /// The Buyer address line 2 of this order
        /// </summary>
        /// <value>The Buyer address line 2 of this order</value>
        [DataMember(Name="order_Buyer_AddressLine2", EmitDefaultValue=false)]
        public string OrderBuyerAddressLine2 { get; set; }
        /// <summary>
        /// The Buyer address line 3 of this order
        /// </summary>
        /// <value>The Buyer address line 3 of this order</value>
        [DataMember(Name="order_Buyer_AddressLine3", EmitDefaultValue=false)]
        public string OrderBuyerAddressLine3 { get; set; }
        /// <summary>
        /// The Buyer address postal code of this order
        /// </summary>
        /// <value>The Buyer address postal code of this order</value>
        [DataMember(Name="order_Buyer_AddressPostalCode", EmitDefaultValue=false)]
        public string OrderBuyerAddressPostalCode { get; set; }
        /// <summary>
        /// The Buyer address city of this order
        /// </summary>
        /// <value>The Buyer address city of this order</value>
        [DataMember(Name="order_Buyer_AddressCity", EmitDefaultValue=false)]
        public string OrderBuyerAddressCity { get; set; }
        /// <summary>
        /// The Buyer address state or region of this order
        /// </summary>
        /// <value>The Buyer address state or region of this order</value>
        [DataMember(Name="order_Buyer_AddressStateOrRegion", EmitDefaultValue=false)]
        public string OrderBuyerAddressStateOrRegion { get; set; }
        /// <summary>
        /// The Buyer address country name
        /// </summary>
        /// <value>The Buyer address country name</value>
        [DataMember(Name="order_Buyer_AddressCountryName", EmitDefaultValue=false)]
        public string OrderBuyerAddressCountryName { get; set; }
        /// <summary>
        /// The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)
        /// </summary>
        /// <value>The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)</value>
        [DataMember(Name="order_Buyer_AddressCountryIsoCodeAlpha2", EmitDefaultValue=false)]
        public string OrderBuyerAddressCountryIsoCodeAlpha2 { get; set; }
        /// <summary>
        /// The phone number of the buyer for this order
        /// </summary>
        /// <value>The phone number of the buyer for this order</value>
        [DataMember(Name="order_Buyer_Phone", EmitDefaultValue=false)]
        public string OrderBuyerPhone { get; set; }
        /// <summary>
        /// The mobile phone number of the buyer for this order
        /// </summary>
        /// <value>The mobile phone number of the buyer for this order</value>
        [DataMember(Name="order_Buyer_MobilePhone", EmitDefaultValue=false)]
        public string OrderBuyerMobilePhone { get; set; }
        /// <summary>
        /// Technical information: The url to the source of this order. We received this information from the marketplace. 
        /// </summary>
        /// <value>Technical information: The url to the source of this order. We received this information from the marketplace. </value>
        [DataMember(Name="order_OrderSourceUri", EmitDefaultValue=false)]
        public string OrderOrderSourceUri { get; set; }
        /// <summary>
        /// Technical information: The url to the source of this order items. We received this information from the marketplace. 
        /// </summary>
        /// <value>Technical information: The url to the source of this order items. We received this information from the marketplace. </value>
        [DataMember(Name="order_OrderItemsSourceUri", EmitDefaultValue=false)]
        public string OrderOrderItemsSourceUri { get; set; }
        /// <summary>
        /// Gets or Sets OrderItems
        /// </summary>
        [DataMember(Name="orderItems", EmitDefaultValue=false)]
        public List<OrderItem> OrderItems { get; set; }
        /// <summary>
        /// Gets or Sets TransitionLinks
        /// </summary>
        [DataMember(Name="transitionLinks", EmitDefaultValue=false)]
        public OrderTransitionLinks TransitionLinks { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Order {\n");
            sb.Append("  MarketplaceTechnicalCode: ").Append(MarketplaceTechnicalCode).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  BeezUPOrderId: ").Append(BeezUPOrderId).Append("\n");
            sb.Append("  BeezUPOrderUrl: ").Append(BeezUPOrderUrl).Append("\n");
            sb.Append("  MarketplaceBusinessCode: ").Append(MarketplaceBusinessCode).Append("\n");
            sb.Append("  OrderMarketplaceOrderId: ").Append(OrderMarketplaceOrderId).Append("\n");
            sb.Append("  OrderStatusBeezUPOrderStatus: ").Append(OrderStatusBeezUPOrderStatus).Append("\n");
            sb.Append("  OrderStatusMarketplaceOrderStatus: ").Append(OrderStatusMarketplaceOrderStatus).Append("\n");
            sb.Append("  OrderMerchantOrderId: ").Append(OrderMerchantOrderId).Append("\n");
            sb.Append("  OrderMerchantECommerceSoftwareName: ").Append(OrderMerchantECommerceSoftwareName).Append("\n");
            sb.Append("  OrderMerchantECommerceSoftwareVersion: ").Append(OrderMerchantECommerceSoftwareVersion).Append("\n");
            sb.Append("  OrderPurchaseUtcDate: ").Append(OrderPurchaseUtcDate).Append("\n");
            sb.Append("  OrderLastModificationUtcDate: ").Append(OrderLastModificationUtcDate).Append("\n");
            sb.Append("  OrderMarketplaceLastModificationUtcDate: ").Append(OrderMarketplaceLastModificationUtcDate).Append("\n");
            sb.Append("  OrderBuyerName: ").Append(OrderBuyerName).Append("\n");
            sb.Append("  OrderTotalPrice: ").Append(OrderTotalPrice).Append("\n");
            sb.Append("  OrderCurrencyCode: ").Append(OrderCurrencyCode).Append("\n");
            sb.Append("  Processing: ").Append(Processing).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  OrderMarketPlaceChannel: ").Append(OrderMarketPlaceChannel).Append("\n");
            sb.Append("  OrderTotalTax: ").Append(OrderTotalTax).Append("\n");
            sb.Append("  OrderTotalCommission: ").Append(OrderTotalCommission).Append("\n");
            sb.Append("  OrderPaymentMethod: ").Append(OrderPaymentMethod).Append("\n");
            sb.Append("  OrderPayingUtcDate: ").Append(OrderPayingUtcDate).Append("\n");
            sb.Append("  OrderComment: ").Append(OrderComment).Append("\n");
            sb.Append("  OrderShippingCivility: ").Append(OrderShippingCivility).Append("\n");
            sb.Append("  OrderShippingCompanyName: ").Append(OrderShippingCompanyName).Append("\n");
            sb.Append("  OrderShippingAddressName: ").Append(OrderShippingAddressName).Append("\n");
            sb.Append("  OrderShippingEmail: ").Append(OrderShippingEmail).Append("\n");
            sb.Append("  OrderShippingAddressLine1: ").Append(OrderShippingAddressLine1).Append("\n");
            sb.Append("  OrderShippingAddressLine2: ").Append(OrderShippingAddressLine2).Append("\n");
            sb.Append("  OrderShippingAddressLine3: ").Append(OrderShippingAddressLine3).Append("\n");
            sb.Append("  OrderShippingAddressPostalCode: ").Append(OrderShippingAddressPostalCode).Append("\n");
            sb.Append("  OrderShippingAddressCity: ").Append(OrderShippingAddressCity).Append("\n");
            sb.Append("  OrderShippingAddressStateOrRegion: ").Append(OrderShippingAddressStateOrRegion).Append("\n");
            sb.Append("  OrderShippingAddressCountryName: ").Append(OrderShippingAddressCountryName).Append("\n");
            sb.Append("  OrderShippingAddressCountryIsoCodeAlpha2: ").Append(OrderShippingAddressCountryIsoCodeAlpha2).Append("\n");
            sb.Append("  OrderShippingPhone: ").Append(OrderShippingPhone).Append("\n");
            sb.Append("  OrderShippingMobilePhone: ").Append(OrderShippingMobilePhone).Append("\n");
            sb.Append("  OrderShippingPrice: ").Append(OrderShippingPrice).Append("\n");
            sb.Append("  OrderShippingMethod: ").Append(OrderShippingMethod).Append("\n");
            sb.Append("  OrderShippingShippingTax: ").Append(OrderShippingShippingTax).Append("\n");
            sb.Append("  OrderShippingEarliestShipUtcDate: ").Append(OrderShippingEarliestShipUtcDate).Append("\n");
            sb.Append("  OrderShippingLatestShipUtcDate: ").Append(OrderShippingLatestShipUtcDate).Append("\n");
            sb.Append("  OrderBuyerIdentifier: ").Append(OrderBuyerIdentifier).Append("\n");
            sb.Append("  OrderBuyerCivility: ").Append(OrderBuyerCivility).Append("\n");
            sb.Append("  OrderBuyerCompanyName: ").Append(OrderBuyerCompanyName).Append("\n");
            sb.Append("  OrderBuyerEmail: ").Append(OrderBuyerEmail).Append("\n");
            sb.Append("  OrderBuyerAddressLine1: ").Append(OrderBuyerAddressLine1).Append("\n");
            sb.Append("  OrderBuyerAddressLine2: ").Append(OrderBuyerAddressLine2).Append("\n");
            sb.Append("  OrderBuyerAddressLine3: ").Append(OrderBuyerAddressLine3).Append("\n");
            sb.Append("  OrderBuyerAddressPostalCode: ").Append(OrderBuyerAddressPostalCode).Append("\n");
            sb.Append("  OrderBuyerAddressCity: ").Append(OrderBuyerAddressCity).Append("\n");
            sb.Append("  OrderBuyerAddressStateOrRegion: ").Append(OrderBuyerAddressStateOrRegion).Append("\n");
            sb.Append("  OrderBuyerAddressCountryName: ").Append(OrderBuyerAddressCountryName).Append("\n");
            sb.Append("  OrderBuyerAddressCountryIsoCodeAlpha2: ").Append(OrderBuyerAddressCountryIsoCodeAlpha2).Append("\n");
            sb.Append("  OrderBuyerPhone: ").Append(OrderBuyerPhone).Append("\n");
            sb.Append("  OrderBuyerMobilePhone: ").Append(OrderBuyerMobilePhone).Append("\n");
            sb.Append("  OrderOrderSourceUri: ").Append(OrderOrderSourceUri).Append("\n");
            sb.Append("  OrderOrderItemsSourceUri: ").Append(OrderOrderItemsSourceUri).Append("\n");
            sb.Append("  OrderItems: ").Append(OrderItems).Append("\n");
            sb.Append("  TransitionLinks: ").Append(TransitionLinks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Order);
        }

        /// <summary>
        /// Returns true if Order instances are equal
        /// </summary>
        /// <param name="other">Instance of Order to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Order other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.MarketplaceTechnicalCode == other.MarketplaceTechnicalCode ||
                    this.MarketplaceTechnicalCode != null &&
                    this.MarketplaceTechnicalCode.Equals(other.MarketplaceTechnicalCode)
                ) && 
                (
                    this.AccountId == other.AccountId ||
                    this.AccountId != null &&
                    this.AccountId.Equals(other.AccountId)
                ) && 
                (
                    this.BeezUPOrderId == other.BeezUPOrderId ||
                    this.BeezUPOrderId != null &&
                    this.BeezUPOrderId.Equals(other.BeezUPOrderId)
                ) && 
                (
                    this.BeezUPOrderUrl == other.BeezUPOrderUrl ||
                    this.BeezUPOrderUrl != null &&
                    this.BeezUPOrderUrl.Equals(other.BeezUPOrderUrl)
                ) && 
                (
                    this.MarketplaceBusinessCode == other.MarketplaceBusinessCode ||
                    this.MarketplaceBusinessCode != null &&
                    this.MarketplaceBusinessCode.Equals(other.MarketplaceBusinessCode)
                ) && 
                (
                    this.OrderMarketplaceOrderId == other.OrderMarketplaceOrderId ||
                    this.OrderMarketplaceOrderId != null &&
                    this.OrderMarketplaceOrderId.Equals(other.OrderMarketplaceOrderId)
                ) && 
                (
                    this.OrderStatusBeezUPOrderStatus == other.OrderStatusBeezUPOrderStatus ||
                    this.OrderStatusBeezUPOrderStatus != null &&
                    this.OrderStatusBeezUPOrderStatus.Equals(other.OrderStatusBeezUPOrderStatus)
                ) && 
                (
                    this.OrderStatusMarketplaceOrderStatus == other.OrderStatusMarketplaceOrderStatus ||
                    this.OrderStatusMarketplaceOrderStatus != null &&
                    this.OrderStatusMarketplaceOrderStatus.Equals(other.OrderStatusMarketplaceOrderStatus)
                ) && 
                (
                    this.OrderMerchantOrderId == other.OrderMerchantOrderId ||
                    this.OrderMerchantOrderId != null &&
                    this.OrderMerchantOrderId.Equals(other.OrderMerchantOrderId)
                ) && 
                (
                    this.OrderMerchantECommerceSoftwareName == other.OrderMerchantECommerceSoftwareName ||
                    this.OrderMerchantECommerceSoftwareName != null &&
                    this.OrderMerchantECommerceSoftwareName.Equals(other.OrderMerchantECommerceSoftwareName)
                ) && 
                (
                    this.OrderMerchantECommerceSoftwareVersion == other.OrderMerchantECommerceSoftwareVersion ||
                    this.OrderMerchantECommerceSoftwareVersion != null &&
                    this.OrderMerchantECommerceSoftwareVersion.Equals(other.OrderMerchantECommerceSoftwareVersion)
                ) && 
                (
                    this.OrderPurchaseUtcDate == other.OrderPurchaseUtcDate ||
                    this.OrderPurchaseUtcDate != null &&
                    this.OrderPurchaseUtcDate.Equals(other.OrderPurchaseUtcDate)
                ) && 
                (
                    this.OrderLastModificationUtcDate == other.OrderLastModificationUtcDate ||
                    this.OrderLastModificationUtcDate != null &&
                    this.OrderLastModificationUtcDate.Equals(other.OrderLastModificationUtcDate)
                ) && 
                (
                    this.OrderMarketplaceLastModificationUtcDate == other.OrderMarketplaceLastModificationUtcDate ||
                    this.OrderMarketplaceLastModificationUtcDate != null &&
                    this.OrderMarketplaceLastModificationUtcDate.Equals(other.OrderMarketplaceLastModificationUtcDate)
                ) && 
                (
                    this.OrderBuyerName == other.OrderBuyerName ||
                    this.OrderBuyerName != null &&
                    this.OrderBuyerName.Equals(other.OrderBuyerName)
                ) && 
                (
                    this.OrderTotalPrice == other.OrderTotalPrice ||
                    this.OrderTotalPrice != null &&
                    this.OrderTotalPrice.Equals(other.OrderTotalPrice)
                ) && 
                (
                    this.OrderCurrencyCode == other.OrderCurrencyCode ||
                    this.OrderCurrencyCode != null &&
                    this.OrderCurrencyCode.Equals(other.OrderCurrencyCode)
                ) && 
                (
                    this.Processing == other.Processing ||
                    this.Processing != null &&
                    this.Processing.Equals(other.Processing)
                ) && 
                (
                    this.Etag == other.Etag ||
                    this.Etag != null &&
                    this.Etag.Equals(other.Etag)
                ) && 
                (
                    this.Links == other.Links ||
                    this.Links != null &&
                    this.Links.Equals(other.Links)
                ) && 
                (
                    this.OrderMarketPlaceChannel == other.OrderMarketPlaceChannel ||
                    this.OrderMarketPlaceChannel != null &&
                    this.OrderMarketPlaceChannel.Equals(other.OrderMarketPlaceChannel)
                ) && 
                (
                    this.OrderTotalTax == other.OrderTotalTax ||
                    this.OrderTotalTax != null &&
                    this.OrderTotalTax.Equals(other.OrderTotalTax)
                ) && 
                (
                    this.OrderTotalCommission == other.OrderTotalCommission ||
                    this.OrderTotalCommission != null &&
                    this.OrderTotalCommission.Equals(other.OrderTotalCommission)
                ) && 
                (
                    this.OrderPaymentMethod == other.OrderPaymentMethod ||
                    this.OrderPaymentMethod != null &&
                    this.OrderPaymentMethod.Equals(other.OrderPaymentMethod)
                ) && 
                (
                    this.OrderPayingUtcDate == other.OrderPayingUtcDate ||
                    this.OrderPayingUtcDate != null &&
                    this.OrderPayingUtcDate.Equals(other.OrderPayingUtcDate)
                ) && 
                (
                    this.OrderComment == other.OrderComment ||
                    this.OrderComment != null &&
                    this.OrderComment.Equals(other.OrderComment)
                ) && 
                (
                    this.OrderShippingCivility == other.OrderShippingCivility ||
                    this.OrderShippingCivility != null &&
                    this.OrderShippingCivility.Equals(other.OrderShippingCivility)
                ) && 
                (
                    this.OrderShippingCompanyName == other.OrderShippingCompanyName ||
                    this.OrderShippingCompanyName != null &&
                    this.OrderShippingCompanyName.Equals(other.OrderShippingCompanyName)
                ) && 
                (
                    this.OrderShippingAddressName == other.OrderShippingAddressName ||
                    this.OrderShippingAddressName != null &&
                    this.OrderShippingAddressName.Equals(other.OrderShippingAddressName)
                ) && 
                (
                    this.OrderShippingEmail == other.OrderShippingEmail ||
                    this.OrderShippingEmail != null &&
                    this.OrderShippingEmail.Equals(other.OrderShippingEmail)
                ) && 
                (
                    this.OrderShippingAddressLine1 == other.OrderShippingAddressLine1 ||
                    this.OrderShippingAddressLine1 != null &&
                    this.OrderShippingAddressLine1.Equals(other.OrderShippingAddressLine1)
                ) && 
                (
                    this.OrderShippingAddressLine2 == other.OrderShippingAddressLine2 ||
                    this.OrderShippingAddressLine2 != null &&
                    this.OrderShippingAddressLine2.Equals(other.OrderShippingAddressLine2)
                ) && 
                (
                    this.OrderShippingAddressLine3 == other.OrderShippingAddressLine3 ||
                    this.OrderShippingAddressLine3 != null &&
                    this.OrderShippingAddressLine3.Equals(other.OrderShippingAddressLine3)
                ) && 
                (
                    this.OrderShippingAddressPostalCode == other.OrderShippingAddressPostalCode ||
                    this.OrderShippingAddressPostalCode != null &&
                    this.OrderShippingAddressPostalCode.Equals(other.OrderShippingAddressPostalCode)
                ) && 
                (
                    this.OrderShippingAddressCity == other.OrderShippingAddressCity ||
                    this.OrderShippingAddressCity != null &&
                    this.OrderShippingAddressCity.Equals(other.OrderShippingAddressCity)
                ) && 
                (
                    this.OrderShippingAddressStateOrRegion == other.OrderShippingAddressStateOrRegion ||
                    this.OrderShippingAddressStateOrRegion != null &&
                    this.OrderShippingAddressStateOrRegion.Equals(other.OrderShippingAddressStateOrRegion)
                ) && 
                (
                    this.OrderShippingAddressCountryName == other.OrderShippingAddressCountryName ||
                    this.OrderShippingAddressCountryName != null &&
                    this.OrderShippingAddressCountryName.Equals(other.OrderShippingAddressCountryName)
                ) && 
                (
                    this.OrderShippingAddressCountryIsoCodeAlpha2 == other.OrderShippingAddressCountryIsoCodeAlpha2 ||
                    this.OrderShippingAddressCountryIsoCodeAlpha2 != null &&
                    this.OrderShippingAddressCountryIsoCodeAlpha2.Equals(other.OrderShippingAddressCountryIsoCodeAlpha2)
                ) && 
                (
                    this.OrderShippingPhone == other.OrderShippingPhone ||
                    this.OrderShippingPhone != null &&
                    this.OrderShippingPhone.Equals(other.OrderShippingPhone)
                ) && 
                (
                    this.OrderShippingMobilePhone == other.OrderShippingMobilePhone ||
                    this.OrderShippingMobilePhone != null &&
                    this.OrderShippingMobilePhone.Equals(other.OrderShippingMobilePhone)
                ) && 
                (
                    this.OrderShippingPrice == other.OrderShippingPrice ||
                    this.OrderShippingPrice != null &&
                    this.OrderShippingPrice.Equals(other.OrderShippingPrice)
                ) && 
                (
                    this.OrderShippingMethod == other.OrderShippingMethod ||
                    this.OrderShippingMethod != null &&
                    this.OrderShippingMethod.Equals(other.OrderShippingMethod)
                ) && 
                (
                    this.OrderShippingShippingTax == other.OrderShippingShippingTax ||
                    this.OrderShippingShippingTax != null &&
                    this.OrderShippingShippingTax.Equals(other.OrderShippingShippingTax)
                ) && 
                (
                    this.OrderShippingEarliestShipUtcDate == other.OrderShippingEarliestShipUtcDate ||
                    this.OrderShippingEarliestShipUtcDate != null &&
                    this.OrderShippingEarliestShipUtcDate.Equals(other.OrderShippingEarliestShipUtcDate)
                ) && 
                (
                    this.OrderShippingLatestShipUtcDate == other.OrderShippingLatestShipUtcDate ||
                    this.OrderShippingLatestShipUtcDate != null &&
                    this.OrderShippingLatestShipUtcDate.Equals(other.OrderShippingLatestShipUtcDate)
                ) && 
                (
                    this.OrderBuyerIdentifier == other.OrderBuyerIdentifier ||
                    this.OrderBuyerIdentifier != null &&
                    this.OrderBuyerIdentifier.Equals(other.OrderBuyerIdentifier)
                ) && 
                (
                    this.OrderBuyerCivility == other.OrderBuyerCivility ||
                    this.OrderBuyerCivility != null &&
                    this.OrderBuyerCivility.Equals(other.OrderBuyerCivility)
                ) && 
                (
                    this.OrderBuyerCompanyName == other.OrderBuyerCompanyName ||
                    this.OrderBuyerCompanyName != null &&
                    this.OrderBuyerCompanyName.Equals(other.OrderBuyerCompanyName)
                ) && 
                (
                    this.OrderBuyerEmail == other.OrderBuyerEmail ||
                    this.OrderBuyerEmail != null &&
                    this.OrderBuyerEmail.Equals(other.OrderBuyerEmail)
                ) && 
                (
                    this.OrderBuyerAddressLine1 == other.OrderBuyerAddressLine1 ||
                    this.OrderBuyerAddressLine1 != null &&
                    this.OrderBuyerAddressLine1.Equals(other.OrderBuyerAddressLine1)
                ) && 
                (
                    this.OrderBuyerAddressLine2 == other.OrderBuyerAddressLine2 ||
                    this.OrderBuyerAddressLine2 != null &&
                    this.OrderBuyerAddressLine2.Equals(other.OrderBuyerAddressLine2)
                ) && 
                (
                    this.OrderBuyerAddressLine3 == other.OrderBuyerAddressLine3 ||
                    this.OrderBuyerAddressLine3 != null &&
                    this.OrderBuyerAddressLine3.Equals(other.OrderBuyerAddressLine3)
                ) && 
                (
                    this.OrderBuyerAddressPostalCode == other.OrderBuyerAddressPostalCode ||
                    this.OrderBuyerAddressPostalCode != null &&
                    this.OrderBuyerAddressPostalCode.Equals(other.OrderBuyerAddressPostalCode)
                ) && 
                (
                    this.OrderBuyerAddressCity == other.OrderBuyerAddressCity ||
                    this.OrderBuyerAddressCity != null &&
                    this.OrderBuyerAddressCity.Equals(other.OrderBuyerAddressCity)
                ) && 
                (
                    this.OrderBuyerAddressStateOrRegion == other.OrderBuyerAddressStateOrRegion ||
                    this.OrderBuyerAddressStateOrRegion != null &&
                    this.OrderBuyerAddressStateOrRegion.Equals(other.OrderBuyerAddressStateOrRegion)
                ) && 
                (
                    this.OrderBuyerAddressCountryName == other.OrderBuyerAddressCountryName ||
                    this.OrderBuyerAddressCountryName != null &&
                    this.OrderBuyerAddressCountryName.Equals(other.OrderBuyerAddressCountryName)
                ) && 
                (
                    this.OrderBuyerAddressCountryIsoCodeAlpha2 == other.OrderBuyerAddressCountryIsoCodeAlpha2 ||
                    this.OrderBuyerAddressCountryIsoCodeAlpha2 != null &&
                    this.OrderBuyerAddressCountryIsoCodeAlpha2.Equals(other.OrderBuyerAddressCountryIsoCodeAlpha2)
                ) && 
                (
                    this.OrderBuyerPhone == other.OrderBuyerPhone ||
                    this.OrderBuyerPhone != null &&
                    this.OrderBuyerPhone.Equals(other.OrderBuyerPhone)
                ) && 
                (
                    this.OrderBuyerMobilePhone == other.OrderBuyerMobilePhone ||
                    this.OrderBuyerMobilePhone != null &&
                    this.OrderBuyerMobilePhone.Equals(other.OrderBuyerMobilePhone)
                ) && 
                (
                    this.OrderOrderSourceUri == other.OrderOrderSourceUri ||
                    this.OrderOrderSourceUri != null &&
                    this.OrderOrderSourceUri.Equals(other.OrderOrderSourceUri)
                ) && 
                (
                    this.OrderOrderItemsSourceUri == other.OrderOrderItemsSourceUri ||
                    this.OrderOrderItemsSourceUri != null &&
                    this.OrderOrderItemsSourceUri.Equals(other.OrderOrderItemsSourceUri)
                ) && 
                (
                    this.OrderItems == other.OrderItems ||
                    this.OrderItems != null &&
                    this.OrderItems.SequenceEqual(other.OrderItems)
                ) && 
                (
                    this.TransitionLinks == other.TransitionLinks ||
                    this.TransitionLinks != null &&
                    this.TransitionLinks.Equals(other.TransitionLinks)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.MarketplaceTechnicalCode != null)
                    hash = hash * 59 + this.MarketplaceTechnicalCode.GetHashCode();
                if (this.AccountId != null)
                    hash = hash * 59 + this.AccountId.GetHashCode();
                if (this.BeezUPOrderId != null)
                    hash = hash * 59 + this.BeezUPOrderId.GetHashCode();
                if (this.BeezUPOrderUrl != null)
                    hash = hash * 59 + this.BeezUPOrderUrl.GetHashCode();
                if (this.MarketplaceBusinessCode != null)
                    hash = hash * 59 + this.MarketplaceBusinessCode.GetHashCode();
                if (this.OrderMarketplaceOrderId != null)
                    hash = hash * 59 + this.OrderMarketplaceOrderId.GetHashCode();
                if (this.OrderStatusBeezUPOrderStatus != null)
                    hash = hash * 59 + this.OrderStatusBeezUPOrderStatus.GetHashCode();
                if (this.OrderStatusMarketplaceOrderStatus != null)
                    hash = hash * 59 + this.OrderStatusMarketplaceOrderStatus.GetHashCode();
                if (this.OrderMerchantOrderId != null)
                    hash = hash * 59 + this.OrderMerchantOrderId.GetHashCode();
                if (this.OrderMerchantECommerceSoftwareName != null)
                    hash = hash * 59 + this.OrderMerchantECommerceSoftwareName.GetHashCode();
                if (this.OrderMerchantECommerceSoftwareVersion != null)
                    hash = hash * 59 + this.OrderMerchantECommerceSoftwareVersion.GetHashCode();
                if (this.OrderPurchaseUtcDate != null)
                    hash = hash * 59 + this.OrderPurchaseUtcDate.GetHashCode();
                if (this.OrderLastModificationUtcDate != null)
                    hash = hash * 59 + this.OrderLastModificationUtcDate.GetHashCode();
                if (this.OrderMarketplaceLastModificationUtcDate != null)
                    hash = hash * 59 + this.OrderMarketplaceLastModificationUtcDate.GetHashCode();
                if (this.OrderBuyerName != null)
                    hash = hash * 59 + this.OrderBuyerName.GetHashCode();
                if (this.OrderTotalPrice != null)
                    hash = hash * 59 + this.OrderTotalPrice.GetHashCode();
                if (this.OrderCurrencyCode != null)
                    hash = hash * 59 + this.OrderCurrencyCode.GetHashCode();
                if (this.Processing != null)
                    hash = hash * 59 + this.Processing.GetHashCode();
                if (this.Etag != null)
                    hash = hash * 59 + this.Etag.GetHashCode();
                if (this.Links != null)
                    hash = hash * 59 + this.Links.GetHashCode();
                if (this.OrderMarketPlaceChannel != null)
                    hash = hash * 59 + this.OrderMarketPlaceChannel.GetHashCode();
                if (this.OrderTotalTax != null)
                    hash = hash * 59 + this.OrderTotalTax.GetHashCode();
                if (this.OrderTotalCommission != null)
                    hash = hash * 59 + this.OrderTotalCommission.GetHashCode();
                if (this.OrderPaymentMethod != null)
                    hash = hash * 59 + this.OrderPaymentMethod.GetHashCode();
                if (this.OrderPayingUtcDate != null)
                    hash = hash * 59 + this.OrderPayingUtcDate.GetHashCode();
                if (this.OrderComment != null)
                    hash = hash * 59 + this.OrderComment.GetHashCode();
                if (this.OrderShippingCivility != null)
                    hash = hash * 59 + this.OrderShippingCivility.GetHashCode();
                if (this.OrderShippingCompanyName != null)
                    hash = hash * 59 + this.OrderShippingCompanyName.GetHashCode();
                if (this.OrderShippingAddressName != null)
                    hash = hash * 59 + this.OrderShippingAddressName.GetHashCode();
                if (this.OrderShippingEmail != null)
                    hash = hash * 59 + this.OrderShippingEmail.GetHashCode();
                if (this.OrderShippingAddressLine1 != null)
                    hash = hash * 59 + this.OrderShippingAddressLine1.GetHashCode();
                if (this.OrderShippingAddressLine2 != null)
                    hash = hash * 59 + this.OrderShippingAddressLine2.GetHashCode();
                if (this.OrderShippingAddressLine3 != null)
                    hash = hash * 59 + this.OrderShippingAddressLine3.GetHashCode();
                if (this.OrderShippingAddressPostalCode != null)
                    hash = hash * 59 + this.OrderShippingAddressPostalCode.GetHashCode();
                if (this.OrderShippingAddressCity != null)
                    hash = hash * 59 + this.OrderShippingAddressCity.GetHashCode();
                if (this.OrderShippingAddressStateOrRegion != null)
                    hash = hash * 59 + this.OrderShippingAddressStateOrRegion.GetHashCode();
                if (this.OrderShippingAddressCountryName != null)
                    hash = hash * 59 + this.OrderShippingAddressCountryName.GetHashCode();
                if (this.OrderShippingAddressCountryIsoCodeAlpha2 != null)
                    hash = hash * 59 + this.OrderShippingAddressCountryIsoCodeAlpha2.GetHashCode();
                if (this.OrderShippingPhone != null)
                    hash = hash * 59 + this.OrderShippingPhone.GetHashCode();
                if (this.OrderShippingMobilePhone != null)
                    hash = hash * 59 + this.OrderShippingMobilePhone.GetHashCode();
                if (this.OrderShippingPrice != null)
                    hash = hash * 59 + this.OrderShippingPrice.GetHashCode();
                if (this.OrderShippingMethod != null)
                    hash = hash * 59 + this.OrderShippingMethod.GetHashCode();
                if (this.OrderShippingShippingTax != null)
                    hash = hash * 59 + this.OrderShippingShippingTax.GetHashCode();
                if (this.OrderShippingEarliestShipUtcDate != null)
                    hash = hash * 59 + this.OrderShippingEarliestShipUtcDate.GetHashCode();
                if (this.OrderShippingLatestShipUtcDate != null)
                    hash = hash * 59 + this.OrderShippingLatestShipUtcDate.GetHashCode();
                if (this.OrderBuyerIdentifier != null)
                    hash = hash * 59 + this.OrderBuyerIdentifier.GetHashCode();
                if (this.OrderBuyerCivility != null)
                    hash = hash * 59 + this.OrderBuyerCivility.GetHashCode();
                if (this.OrderBuyerCompanyName != null)
                    hash = hash * 59 + this.OrderBuyerCompanyName.GetHashCode();
                if (this.OrderBuyerEmail != null)
                    hash = hash * 59 + this.OrderBuyerEmail.GetHashCode();
                if (this.OrderBuyerAddressLine1 != null)
                    hash = hash * 59 + this.OrderBuyerAddressLine1.GetHashCode();
                if (this.OrderBuyerAddressLine2 != null)
                    hash = hash * 59 + this.OrderBuyerAddressLine2.GetHashCode();
                if (this.OrderBuyerAddressLine3 != null)
                    hash = hash * 59 + this.OrderBuyerAddressLine3.GetHashCode();
                if (this.OrderBuyerAddressPostalCode != null)
                    hash = hash * 59 + this.OrderBuyerAddressPostalCode.GetHashCode();
                if (this.OrderBuyerAddressCity != null)
                    hash = hash * 59 + this.OrderBuyerAddressCity.GetHashCode();
                if (this.OrderBuyerAddressStateOrRegion != null)
                    hash = hash * 59 + this.OrderBuyerAddressStateOrRegion.GetHashCode();
                if (this.OrderBuyerAddressCountryName != null)
                    hash = hash * 59 + this.OrderBuyerAddressCountryName.GetHashCode();
                if (this.OrderBuyerAddressCountryIsoCodeAlpha2 != null)
                    hash = hash * 59 + this.OrderBuyerAddressCountryIsoCodeAlpha2.GetHashCode();
                if (this.OrderBuyerPhone != null)
                    hash = hash * 59 + this.OrderBuyerPhone.GetHashCode();
                if (this.OrderBuyerMobilePhone != null)
                    hash = hash * 59 + this.OrderBuyerMobilePhone.GetHashCode();
                if (this.OrderOrderSourceUri != null)
                    hash = hash * 59 + this.OrderOrderSourceUri.GetHashCode();
                if (this.OrderOrderItemsSourceUri != null)
                    hash = hash * 59 + this.OrderOrderItemsSourceUri.GetHashCode();
                if (this.OrderItems != null)
                    hash = hash * 59 + this.OrderItems.GetHashCode();
                if (this.TransitionLinks != null)
                    hash = hash * 59 + this.TransitionLinks.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
