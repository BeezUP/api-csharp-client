/* 
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OneOrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OneOrderApiTests
    {
        private OneOrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OneOrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OneOrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OneOrderApi
            //Assert.IsInstanceOfType(typeof(OneOrderApi), instance, "instance is a OneOrderApi");
        }

        
        /// <summary>
        /// Test ChangeOrder
        /// </summary>
        [Test]
        public void ChangeOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //string changeOrderType = null;
            //string userName = null;
            //ChangeOrderRequest request = null;
            //string ifMatch = null;
            //bool? testMode = null;
            //instance.ChangeOrder(marketplaceTechnicalCode, accountId, beezUPOrderId, changeOrderType, userName, request, ifMatch, testMode);
            
        }
        
        /// <summary>
        /// Test ClearMerchantOrderInfo
        /// </summary>
        [Test]
        public void ClearMerchantOrderInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //instance.ClearMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId);
            
        }
        
        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Test]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //string ifNoneMatch = null;
            //var response = instance.GetOrder(marketplaceTechnicalCode, accountId, beezUPOrderId, ifNoneMatch);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test GetOrderHistory
        /// </summary>
        [Test]
        public void GetOrderHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //var response = instance.GetOrderHistory(marketplaceTechnicalCode, accountId, beezUPOrderId);
            //Assert.IsInstanceOf<OrderHistory> (response, "response is OrderHistory");
        }
        
        /// <summary>
        /// Test HarvestOrder
        /// </summary>
        [Test]
        public void HarvestOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //instance.HarvestOrder(marketplaceTechnicalCode, accountId, beezUPOrderId);
            
        }
        
        /// <summary>
        /// Test SetMerchantOrderInfo
        /// </summary>
        [Test]
        public void SetMerchantOrderInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //SetMerchantOrderInfoRequest request = null;
            //instance.SetMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId, request);
            
        }
        
    }

}
