/* 
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing V2UserMarketplacesOrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class V2UserMarketplacesOrdersApiTests
    {
        private V2UserMarketplacesOrdersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new V2UserMarketplacesOrdersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of V2UserMarketplacesOrdersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' V2UserMarketplacesOrdersApi
            //Assert.IsInstanceOfType(typeof(V2UserMarketplacesOrdersApi), instance, "instance is a V2UserMarketplacesOrdersApi");
        }

        
        /// <summary>
        /// Test ChangeOrder
        /// </summary>
        [Test]
        public void ChangeOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //string changeOrderType = null;
            //string userName = null;
            //ChangeOrderRequest request = null;
            //string ifMatch = null;
            //bool? testMode = null;
            //instance.ChangeOrder(marketplaceTechnicalCode, accountId, beezUPOrderId, changeOrderType, userName, request, ifMatch, testMode);
            
        }
        
        /// <summary>
        /// Test ChangeOrderList
        /// </summary>
        [Test]
        public void ChangeOrderListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string changeOrderType = null;
            //string userName = null;
            //ChangeOrderListRequest request = null;
            //bool? testMode = null;
            //var response = instance.ChangeOrderList(changeOrderType, userName, request, testMode);
            //Assert.IsInstanceOf<BatchOrderOperationResponse> (response, "response is BatchOrderOperationResponse");
        }
        
        /// <summary>
        /// Test ClearMerchantOrderInfo
        /// </summary>
        [Test]
        public void ClearMerchantOrderInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //instance.ClearMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId);
            
        }
        
        /// <summary>
        /// Test ClearMerchantOrderInfoList
        /// </summary>
        [Test]
        public void ClearMerchantOrderInfoListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClearMerchantOrderInfoListRequest request = null;
            //var response = instance.ClearMerchantOrderInfoList(request);
            //Assert.IsInstanceOf<BatchOrderOperationResponse> (response, "response is BatchOrderOperationResponse");
        }
        
        /// <summary>
        /// Test ConfigureAutomaticTransitions
        /// </summary>
        [Test]
        public void ConfigureAutomaticTransitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SaveAutomaticTransitionRequest request = null;
            //instance.ConfigureAutomaticTransitions(request);
            
        }
        
        /// <summary>
        /// Test ExportOrders
        /// </summary>
        [Test]
        public void ExportOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string format = null;
            //ExportOrderListRequest request = null;
            //instance.ExportOrders(format, request);
            
        }
        
        /// <summary>
        /// Test GetAutomaticTransitions
        /// </summary>
        [Test]
        public void GetAutomaticTransitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAutomaticTransitions();
            //Assert.IsInstanceOf<AutomaticTransitionInfos> (response, "response is AutomaticTransitionInfos");
        }
        
        /// <summary>
        /// Test GetMarketplaceAccountsSynchronization
        /// </summary>
        [Test]
        public void GetMarketplaceAccountsSynchronizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMarketplaceAccountsSynchronization();
            //Assert.IsInstanceOf<AccountSynchronizations> (response, "response is AccountSynchronizations");
        }
        
        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Test]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //string ifNoneMatch = null;
            //var response = instance.GetOrder(marketplaceTechnicalCode, accountId, beezUPOrderId, ifNoneMatch);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test GetOrderExportations
        /// </summary>
        [Test]
        public void GetOrderExportationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? pageSize = null;
            //var response = instance.GetOrderExportations(pageNumber, pageSize);
            //Assert.IsInstanceOf<OrderExportations> (response, "response is OrderExportations");
        }
        
        /// <summary>
        /// Test GetOrderHistory
        /// </summary>
        [Test]
        public void GetOrderHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //var response = instance.GetOrderHistory(marketplaceTechnicalCode, accountId, beezUPOrderId);
            //Assert.IsInstanceOf<OrderHistory> (response, "response is OrderHistory");
        }
        
        /// <summary>
        /// Test GetOrderListFull
        /// </summary>
        [Test]
        public void GetOrderListFullTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> acceptEncoding = null;
            //OrderListRequest request = null;
            //var response = instance.GetOrderListFull(acceptEncoding, request);
            //Assert.IsInstanceOf<OrderListFull> (response, "response is OrderListFull");
        }
        
        /// <summary>
        /// Test GetOrderListLight
        /// </summary>
        [Test]
        public void GetOrderListLightTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderListRequest request = null;
            //var response = instance.GetOrderListLight(request);
            //Assert.IsInstanceOf<OrderListLight> (response, "response is OrderListLight");
        }
        
        /// <summary>
        /// Test HarvestAll
        /// </summary>
        [Test]
        public void HarvestAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.HarvestAll();
            
        }
        
        /// <summary>
        /// Test HarvestOrder
        /// </summary>
        [Test]
        public void HarvestOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //instance.HarvestOrder(marketplaceTechnicalCode, accountId, beezUPOrderId);
            
        }
        
        /// <summary>
        /// Test SetMerchantOrderInfo
        /// </summary>
        [Test]
        public void SetMerchantOrderInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceTechnicalCode = null;
            //int? accountId = null;
            //string beezUPOrderId = null;
            //SetMerchantOrderInfoRequest request = null;
            //instance.SetMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId, request);
            
        }
        
        /// <summary>
        /// Test SetMerchantOrderInfoList
        /// </summary>
        [Test]
        public void SetMerchantOrderInfoListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetMerchantOrderInfoListRequest request = null;
            //var response = instance.SetMerchantOrderInfoList(request);
            //Assert.IsInstanceOf<BatchOrderOperationResponse> (response, "response is BatchOrderOperationResponse");
        }
        
    }

}
