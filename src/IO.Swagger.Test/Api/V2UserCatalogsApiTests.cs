/* 
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing V2UserCatalogsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class V2UserCatalogsApiTests
    {
        private V2UserCatalogsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new V2UserCatalogsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of V2UserCatalogsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' V2UserCatalogsApi
            //Assert.IsInstanceOfType(typeof(V2UserCatalogsApi), instance, "instance is a V2UserCatalogsApi");
        }

        
        /// <summary>
        /// Test AutoConfigureAutoImportInterval
        /// </summary>
        [Test]
        public void AutoConfigureAutoImportIntervalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //ConfigureAutoImportIntervalRequest request = null;
            //instance.AutoConfigureAutoImportInterval(storeId, request);
            
        }
        
        /// <summary>
        /// Test AutoDeleteAutoImport
        /// </summary>
        [Test]
        public void AutoDeleteAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //instance.AutoDeleteAutoImport(storeId);
            
        }
        
        /// <summary>
        /// Test AutoGetAutoImportConfiguration
        /// </summary>
        [Test]
        public void AutoGetAutoImportConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.AutoGetAutoImportConfiguration(storeId);
            //Assert.IsInstanceOf<AutoImportConfiguration> (response, "response is AutoImportConfiguration");
        }
        
        /// <summary>
        /// Test AutoPauseAutoImport
        /// </summary>
        [Test]
        public void AutoPauseAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //instance.AutoPauseAutoImport(storeId);
            
        }
        
        /// <summary>
        /// Test AutoResumeAutoImport
        /// </summary>
        [Test]
        public void AutoResumeAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //instance.AutoResumeAutoImport(storeId);
            
        }
        
        /// <summary>
        /// Test AutoScheduleAutoImport
        /// </summary>
        [Test]
        public void AutoScheduleAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //ScheduleAutoImportRequest request = null;
            //instance.AutoScheduleAutoImport(storeId, request);
            
        }
        
        /// <summary>
        /// Test AutoStartAutoImport
        /// </summary>
        [Test]
        public void AutoStartAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.AutoStartAutoImport(storeId);
            //Assert.IsInstanceOf<List<BeezUPCommonLink2>> (response, "response is List<BeezUPCommonLink2>");
        }
        
        /// <summary>
        /// Test CatalogChangeCatalogColumnUserName
        /// </summary>
        [Test]
        public void CatalogChangeCatalogColumnUserNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //ChangeUserColumnNameRequest request = null;
            //instance.CatalogChangeCatalogColumnUserName(storeId, columnId, request);
            
        }
        
        /// <summary>
        /// Test CatalogChangeCustomColumnExpression
        /// </summary>
        [Test]
        public void CatalogChangeCustomColumnExpressionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //ChangeCustomColumnExpressionRequest request = null;
            //instance.CatalogChangeCustomColumnExpression(storeId, columnId, request);
            
        }
        
        /// <summary>
        /// Test CatalogChangeCustomColumnUserName
        /// </summary>
        [Test]
        public void CatalogChangeCustomColumnUserNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //ChangeUserColumnNameRequest request = null;
            //instance.CatalogChangeCustomColumnUserName(storeId, columnId, request);
            
        }
        
        /// <summary>
        /// Test CatalogComputeExpression
        /// </summary>
        [Test]
        public void CatalogComputeExpressionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //ComputeExpressionRequest request = null;
            //var response = instance.CatalogComputeExpression(storeId, request);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test CatalogDeleteCustomColumn
        /// </summary>
        [Test]
        public void CatalogDeleteCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //instance.CatalogDeleteCustomColumn(storeId, columnId);
            
        }
        
        /// <summary>
        /// Test CatalogGetBeezUPColumns
        /// </summary>
        [Test]
        public void CatalogGetBeezUPColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CatalogGetBeezUPColumns();
            //Assert.IsInstanceOf<List<BeezUPColumnConfiguration>> (response, "response is List<BeezUPColumnConfiguration>");
        }
        
        /// <summary>
        /// Test CatalogGetCatalogColumns
        /// </summary>
        [Test]
        public void CatalogGetCatalogColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.CatalogGetCatalogColumns(storeId);
            //Assert.IsInstanceOf<CatalogColumns> (response, "response is CatalogColumns");
        }
        
        /// <summary>
        /// Test CatalogGetCategories
        /// </summary>
        [Test]
        public void CatalogGetCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //List<string> acceptEncoding = null;
            //var response = instance.CatalogGetCategories(storeId, acceptEncoding);
            //Assert.IsInstanceOf<Categories> (response, "response is Categories");
        }
        
        /// <summary>
        /// Test CatalogGetCustomColumnExpression
        /// </summary>
        [Test]
        public void CatalogGetCustomColumnExpressionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //var response = instance.CatalogGetCustomColumnExpression(storeId, columnId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test CatalogGetCustomColumns
        /// </summary>
        [Test]
        public void CatalogGetCustomColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.CatalogGetCustomColumns(storeId);
            //Assert.IsInstanceOf<CustomColumns> (response, "response is CustomColumns");
        }
        
        /// <summary>
        /// Test CatalogGetProduct
        /// </summary>
        [Test]
        public void CatalogGetProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string productId = null;
            //var response = instance.CatalogGetProduct(storeId, productId);
            //Assert.IsInstanceOf<Product> (response, "response is Product");
        }
        
        /// <summary>
        /// Test CatalogGetProducts
        /// </summary>
        [Test]
        public void CatalogGetProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //GetProductsRequest request = null;
            //var response = instance.CatalogGetProducts(storeId, request);
            //Assert.IsInstanceOf<Products> (response, "response is Products");
        }
        
        /// <summary>
        /// Test CatalogGetRandomProducts
        /// </summary>
        [Test]
        public void CatalogGetRandomProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //int? count = null;
            //var response = instance.CatalogGetRandomProducts(storeId, count);
            //Assert.IsInstanceOf<Products> (response, "response is Products");
        }
        
        /// <summary>
        /// Test CatalogSaveCustomColumn
        /// </summary>
        [Test]
        public void CatalogSaveCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string columnId = null;
            //CreateCustomColumnRequest request = null;
            //instance.CatalogSaveCustomColumn(storeId, columnId, request);
            
        }
        
        /// <summary>
        /// Test ImportationActivateAutoImport
        /// </summary>
        [Test]
        public void ImportationActivateAutoImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //instance.ImportationActivateAutoImport(storeId);
            
        }
        
        /// <summary>
        /// Test ImportationCancel
        /// </summary>
        [Test]
        public void ImportationCancelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //instance.ImportationCancel(storeId, executionId);
            
        }
        
        /// <summary>
        /// Test ImportationCommit
        /// </summary>
        [Test]
        public void ImportationCommitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //instance.ImportationCommit(storeId, executionId);
            
        }
        
        /// <summary>
        /// Test ImportationCommitColumns
        /// </summary>
        [Test]
        public void ImportationCommitColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //instance.ImportationCommitColumns(storeId, executionId);
            
        }
        
        /// <summary>
        /// Test ImportationConfigureCatalogColumn
        /// </summary>
        [Test]
        public void ImportationConfigureCatalogColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //ConfigureCatalogColumnCatalogRequest request = null;
            //instance.ImportationConfigureCatalogColumn(storeId, executionId, columnId, request);
            
        }
        
        /// <summary>
        /// Test ImportationConfigureRemainingCatalogColumns
        /// </summary>
        [Test]
        public void ImportationConfigureRemainingCatalogColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //instance.ImportationConfigureRemainingCatalogColumns(storeId, executionId);
            
        }
        
        /// <summary>
        /// Test ImportationDeleteCustomColumn
        /// </summary>
        [Test]
        public void ImportationDeleteCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //instance.ImportationDeleteCustomColumn(storeId, executionId, columnId);
            
        }
        
        /// <summary>
        /// Test ImportationGetCustomColumnExpression
        /// </summary>
        [Test]
        public void ImportationGetCustomColumnExpressionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //var response = instance.ImportationGetCustomColumnExpression(storeId, executionId, columnId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ImportationGetCustomColumns
        /// </summary>
        [Test]
        public void ImportationGetCustomColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //var response = instance.ImportationGetCustomColumns(storeId, executionId);
            //Assert.IsInstanceOf<CustomColumns> (response, "response is CustomColumns");
        }
        
        /// <summary>
        /// Test ImportationGetDetectedCatalogColumns
        /// </summary>
        [Test]
        public void ImportationGetDetectedCatalogColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //var response = instance.ImportationGetDetectedCatalogColumns(storeId, executionId);
            //Assert.IsInstanceOf<DetectedCatalogColumns> (response, "response is DetectedCatalogColumns");
        }
        
        /// <summary>
        /// Test ImportationGetImportationMonitoring
        /// </summary>
        [Test]
        public void ImportationGetImportationMonitoringTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //var response = instance.ImportationGetImportationMonitoring(storeId, executionId);
            //Assert.IsInstanceOf<ImportationMonitoring> (response, "response is ImportationMonitoring");
        }
        
        /// <summary>
        /// Test ImportationGetManualUpdateLastInputConfig
        /// </summary>
        [Test]
        public void ImportationGetManualUpdateLastInputConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.ImportationGetManualUpdateLastInputConfig(storeId);
            //Assert.IsInstanceOf<LastManualImportInputConfiguration> (response, "response is LastManualImportInputConfiguration");
        }
        
        /// <summary>
        /// Test ImportationGetProductSample
        /// </summary>
        [Test]
        public void ImportationGetProductSampleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //int? productSampleIndex = null;
            //var response = instance.ImportationGetProductSample(storeId, executionId, productSampleIndex);
            //Assert.IsInstanceOf<ProductSample> (response, "response is ProductSample");
        }
        
        /// <summary>
        /// Test ImportationGetProductSampleCustomColumnValue
        /// </summary>
        [Test]
        public void ImportationGetProductSampleCustomColumnValueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //int? productSampleIndex = null;
            //string columnId = null;
            //var response = instance.ImportationGetProductSampleCustomColumnValue(storeId, executionId, productSampleIndex, columnId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ImportationGetReportings
        /// </summary>
        [Test]
        public void ImportationGetReportingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //var response = instance.ImportationGetReportings(storeId);
            //Assert.IsInstanceOf<List<ImportationReporting>> (response, "response is List<ImportationReporting>");
        }
        
        /// <summary>
        /// Test ImportationIgnoreColumn
        /// </summary>
        [Test]
        public void ImportationIgnoreColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //instance.ImportationIgnoreColumn(storeId, executionId, columnId);
            
        }
        
        /// <summary>
        /// Test ImportationMapCatalogColumn
        /// </summary>
        [Test]
        public void ImportationMapCatalogColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //MapBeezUPColumnRequest request = null;
            //instance.ImportationMapCatalogColumn(storeId, executionId, columnId, request);
            
        }
        
        /// <summary>
        /// Test ImportationMapCustomColumn
        /// </summary>
        [Test]
        public void ImportationMapCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //MapBeezUPColumnRequest request = null;
            //instance.ImportationMapCustomColumn(storeId, executionId, columnId, request);
            
        }
        
        /// <summary>
        /// Test ImportationReattendColumn
        /// </summary>
        [Test]
        public void ImportationReattendColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //instance.ImportationReattendColumn(storeId, executionId, columnId);
            
        }
        
        /// <summary>
        /// Test ImportationSaveCustomColumn
        /// </summary>
        [Test]
        public void ImportationSaveCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //ChangeCustomColumnRequest request = null;
            //instance.ImportationSaveCustomColumn(storeId, executionId, columnId, request);
            
        }
        
        /// <summary>
        /// Test ImportationStartManualUpdate
        /// </summary>
        [Test]
        public void ImportationStartManualUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //StartManualImportRequest request = null;
            //var response = instance.ImportationStartManualUpdate(storeId, request);
            //Assert.IsInstanceOf<List<BeezUPCommonLink2>> (response, "response is List<BeezUPCommonLink2>");
        }
        
        /// <summary>
        /// Test ImportationTechnicalProgression
        /// </summary>
        [Test]
        public void ImportationTechnicalProgressionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //var response = instance.ImportationTechnicalProgression(storeId, executionId);
            //Assert.IsInstanceOf<ImportationTechnicalProgression> (response, "response is ImportationTechnicalProgression");
        }
        
        /// <summary>
        /// Test ImportationUnmapCatalogColumn
        /// </summary>
        [Test]
        public void ImportationUnmapCatalogColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //instance.ImportationUnmapCatalogColumn(storeId, executionId, columnId);
            
        }
        
        /// <summary>
        /// Test ImportationUnmapCustomColumn
        /// </summary>
        [Test]
        public void ImportationUnmapCustomColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string storeId = null;
            //string executionId = null;
            //string columnId = null;
            //instance.ImportationUnmapCustomColumn(storeId, executionId, columnId);
            
        }
        
    }

}
