/* 
 * BeezUP API
 *
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/beezUP/API) 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Order
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OrderTests
    {
        // TODO uncomment below to declare an instance variable for Order
        //private Order instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Order
            //instance = new Order();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Order
        /// </summary>
        [Test]
        public void OrderInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Order
            //Assert.IsInstanceOfType<Order> (instance, "variable 'instance' is a Order");
        }

        /// <summary>
        /// Test the property 'MarketplaceTechnicalCode'
        /// </summary>
        [Test]
        public void MarketplaceTechnicalCodeTest()
        {
            // TODO unit test for the property 'MarketplaceTechnicalCode'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Test]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'BeezUPOrderId'
        /// </summary>
        [Test]
        public void BeezUPOrderIdTest()
        {
            // TODO unit test for the property 'BeezUPOrderId'
        }
        /// <summary>
        /// Test the property 'BeezUPOrderUrl'
        /// </summary>
        [Test]
        public void BeezUPOrderUrlTest()
        {
            // TODO unit test for the property 'BeezUPOrderUrl'
        }
        /// <summary>
        /// Test the property 'MarketplaceBusinessCode'
        /// </summary>
        [Test]
        public void MarketplaceBusinessCodeTest()
        {
            // TODO unit test for the property 'MarketplaceBusinessCode'
        }
        /// <summary>
        /// Test the property 'OrderMarketplaceOrderId'
        /// </summary>
        [Test]
        public void OrderMarketplaceOrderIdTest()
        {
            // TODO unit test for the property 'OrderMarketplaceOrderId'
        }
        /// <summary>
        /// Test the property 'OrderStatusBeezUPOrderStatus'
        /// </summary>
        [Test]
        public void OrderStatusBeezUPOrderStatusTest()
        {
            // TODO unit test for the property 'OrderStatusBeezUPOrderStatus'
        }
        /// <summary>
        /// Test the property 'OrderStatusMarketplaceOrderStatus'
        /// </summary>
        [Test]
        public void OrderStatusMarketplaceOrderStatusTest()
        {
            // TODO unit test for the property 'OrderStatusMarketplaceOrderStatus'
        }
        /// <summary>
        /// Test the property 'OrderMerchantOrderId'
        /// </summary>
        [Test]
        public void OrderMerchantOrderIdTest()
        {
            // TODO unit test for the property 'OrderMerchantOrderId'
        }
        /// <summary>
        /// Test the property 'OrderMerchantECommerceSoftwareName'
        /// </summary>
        [Test]
        public void OrderMerchantECommerceSoftwareNameTest()
        {
            // TODO unit test for the property 'OrderMerchantECommerceSoftwareName'
        }
        /// <summary>
        /// Test the property 'OrderMerchantECommerceSoftwareVersion'
        /// </summary>
        [Test]
        public void OrderMerchantECommerceSoftwareVersionTest()
        {
            // TODO unit test for the property 'OrderMerchantECommerceSoftwareVersion'
        }
        /// <summary>
        /// Test the property 'OrderPurchaseUtcDate'
        /// </summary>
        [Test]
        public void OrderPurchaseUtcDateTest()
        {
            // TODO unit test for the property 'OrderPurchaseUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderLastModificationUtcDate'
        /// </summary>
        [Test]
        public void OrderLastModificationUtcDateTest()
        {
            // TODO unit test for the property 'OrderLastModificationUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderMarketplaceLastModificationUtcDate'
        /// </summary>
        [Test]
        public void OrderMarketplaceLastModificationUtcDateTest()
        {
            // TODO unit test for the property 'OrderMarketplaceLastModificationUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderBuyerName'
        /// </summary>
        [Test]
        public void OrderBuyerNameTest()
        {
            // TODO unit test for the property 'OrderBuyerName'
        }
        /// <summary>
        /// Test the property 'OrderTotalPrice'
        /// </summary>
        [Test]
        public void OrderTotalPriceTest()
        {
            // TODO unit test for the property 'OrderTotalPrice'
        }
        /// <summary>
        /// Test the property 'OrderCurrencyCode'
        /// </summary>
        [Test]
        public void OrderCurrencyCodeTest()
        {
            // TODO unit test for the property 'OrderCurrencyCode'
        }
        /// <summary>
        /// Test the property 'Processing'
        /// </summary>
        [Test]
        public void ProcessingTest()
        {
            // TODO unit test for the property 'Processing'
        }
        /// <summary>
        /// Test the property 'Etag'
        /// </summary>
        [Test]
        public void EtagTest()
        {
            // TODO unit test for the property 'Etag'
        }
        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Test]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }
        /// <summary>
        /// Test the property 'OrderMarketPlaceChannel'
        /// </summary>
        [Test]
        public void OrderMarketPlaceChannelTest()
        {
            // TODO unit test for the property 'OrderMarketPlaceChannel'
        }
        /// <summary>
        /// Test the property 'OrderTotalTax'
        /// </summary>
        [Test]
        public void OrderTotalTaxTest()
        {
            // TODO unit test for the property 'OrderTotalTax'
        }
        /// <summary>
        /// Test the property 'OrderTotalCommission'
        /// </summary>
        [Test]
        public void OrderTotalCommissionTest()
        {
            // TODO unit test for the property 'OrderTotalCommission'
        }
        /// <summary>
        /// Test the property 'OrderPaymentMethod'
        /// </summary>
        [Test]
        public void OrderPaymentMethodTest()
        {
            // TODO unit test for the property 'OrderPaymentMethod'
        }
        /// <summary>
        /// Test the property 'OrderPayingUtcDate'
        /// </summary>
        [Test]
        public void OrderPayingUtcDateTest()
        {
            // TODO unit test for the property 'OrderPayingUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderComment'
        /// </summary>
        [Test]
        public void OrderCommentTest()
        {
            // TODO unit test for the property 'OrderComment'
        }
        /// <summary>
        /// Test the property 'OrderShippingCivility'
        /// </summary>
        [Test]
        public void OrderShippingCivilityTest()
        {
            // TODO unit test for the property 'OrderShippingCivility'
        }
        /// <summary>
        /// Test the property 'OrderShippingCompanyName'
        /// </summary>
        [Test]
        public void OrderShippingCompanyNameTest()
        {
            // TODO unit test for the property 'OrderShippingCompanyName'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressName'
        /// </summary>
        [Test]
        public void OrderShippingAddressNameTest()
        {
            // TODO unit test for the property 'OrderShippingAddressName'
        }
        /// <summary>
        /// Test the property 'OrderShippingEmail'
        /// </summary>
        [Test]
        public void OrderShippingEmailTest()
        {
            // TODO unit test for the property 'OrderShippingEmail'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressLine1'
        /// </summary>
        [Test]
        public void OrderShippingAddressLine1Test()
        {
            // TODO unit test for the property 'OrderShippingAddressLine1'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressLine2'
        /// </summary>
        [Test]
        public void OrderShippingAddressLine2Test()
        {
            // TODO unit test for the property 'OrderShippingAddressLine2'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressLine3'
        /// </summary>
        [Test]
        public void OrderShippingAddressLine3Test()
        {
            // TODO unit test for the property 'OrderShippingAddressLine3'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressPostalCode'
        /// </summary>
        [Test]
        public void OrderShippingAddressPostalCodeTest()
        {
            // TODO unit test for the property 'OrderShippingAddressPostalCode'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressCity'
        /// </summary>
        [Test]
        public void OrderShippingAddressCityTest()
        {
            // TODO unit test for the property 'OrderShippingAddressCity'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressStateOrRegion'
        /// </summary>
        [Test]
        public void OrderShippingAddressStateOrRegionTest()
        {
            // TODO unit test for the property 'OrderShippingAddressStateOrRegion'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressCountryName'
        /// </summary>
        [Test]
        public void OrderShippingAddressCountryNameTest()
        {
            // TODO unit test for the property 'OrderShippingAddressCountryName'
        }
        /// <summary>
        /// Test the property 'OrderShippingAddressCountryIsoCodeAlpha2'
        /// </summary>
        [Test]
        public void OrderShippingAddressCountryIsoCodeAlpha2Test()
        {
            // TODO unit test for the property 'OrderShippingAddressCountryIsoCodeAlpha2'
        }
        /// <summary>
        /// Test the property 'OrderShippingPhone'
        /// </summary>
        [Test]
        public void OrderShippingPhoneTest()
        {
            // TODO unit test for the property 'OrderShippingPhone'
        }
        /// <summary>
        /// Test the property 'OrderShippingMobilePhone'
        /// </summary>
        [Test]
        public void OrderShippingMobilePhoneTest()
        {
            // TODO unit test for the property 'OrderShippingMobilePhone'
        }
        /// <summary>
        /// Test the property 'OrderShippingPrice'
        /// </summary>
        [Test]
        public void OrderShippingPriceTest()
        {
            // TODO unit test for the property 'OrderShippingPrice'
        }
        /// <summary>
        /// Test the property 'OrderShippingMethod'
        /// </summary>
        [Test]
        public void OrderShippingMethodTest()
        {
            // TODO unit test for the property 'OrderShippingMethod'
        }
        /// <summary>
        /// Test the property 'OrderShippingShippingTax'
        /// </summary>
        [Test]
        public void OrderShippingShippingTaxTest()
        {
            // TODO unit test for the property 'OrderShippingShippingTax'
        }
        /// <summary>
        /// Test the property 'OrderShippingEarliestShipUtcDate'
        /// </summary>
        [Test]
        public void OrderShippingEarliestShipUtcDateTest()
        {
            // TODO unit test for the property 'OrderShippingEarliestShipUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderShippingLatestShipUtcDate'
        /// </summary>
        [Test]
        public void OrderShippingLatestShipUtcDateTest()
        {
            // TODO unit test for the property 'OrderShippingLatestShipUtcDate'
        }
        /// <summary>
        /// Test the property 'OrderBuyerIdentifier'
        /// </summary>
        [Test]
        public void OrderBuyerIdentifierTest()
        {
            // TODO unit test for the property 'OrderBuyerIdentifier'
        }
        /// <summary>
        /// Test the property 'OrderBuyerCivility'
        /// </summary>
        [Test]
        public void OrderBuyerCivilityTest()
        {
            // TODO unit test for the property 'OrderBuyerCivility'
        }
        /// <summary>
        /// Test the property 'OrderBuyerCompanyName'
        /// </summary>
        [Test]
        public void OrderBuyerCompanyNameTest()
        {
            // TODO unit test for the property 'OrderBuyerCompanyName'
        }
        /// <summary>
        /// Test the property 'OrderBuyerEmail'
        /// </summary>
        [Test]
        public void OrderBuyerEmailTest()
        {
            // TODO unit test for the property 'OrderBuyerEmail'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressLine1'
        /// </summary>
        [Test]
        public void OrderBuyerAddressLine1Test()
        {
            // TODO unit test for the property 'OrderBuyerAddressLine1'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressLine2'
        /// </summary>
        [Test]
        public void OrderBuyerAddressLine2Test()
        {
            // TODO unit test for the property 'OrderBuyerAddressLine2'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressLine3'
        /// </summary>
        [Test]
        public void OrderBuyerAddressLine3Test()
        {
            // TODO unit test for the property 'OrderBuyerAddressLine3'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressPostalCode'
        /// </summary>
        [Test]
        public void OrderBuyerAddressPostalCodeTest()
        {
            // TODO unit test for the property 'OrderBuyerAddressPostalCode'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressCity'
        /// </summary>
        [Test]
        public void OrderBuyerAddressCityTest()
        {
            // TODO unit test for the property 'OrderBuyerAddressCity'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressStateOrRegion'
        /// </summary>
        [Test]
        public void OrderBuyerAddressStateOrRegionTest()
        {
            // TODO unit test for the property 'OrderBuyerAddressStateOrRegion'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressCountryName'
        /// </summary>
        [Test]
        public void OrderBuyerAddressCountryNameTest()
        {
            // TODO unit test for the property 'OrderBuyerAddressCountryName'
        }
        /// <summary>
        /// Test the property 'OrderBuyerAddressCountryIsoCodeAlpha2'
        /// </summary>
        [Test]
        public void OrderBuyerAddressCountryIsoCodeAlpha2Test()
        {
            // TODO unit test for the property 'OrderBuyerAddressCountryIsoCodeAlpha2'
        }
        /// <summary>
        /// Test the property 'OrderBuyerPhone'
        /// </summary>
        [Test]
        public void OrderBuyerPhoneTest()
        {
            // TODO unit test for the property 'OrderBuyerPhone'
        }
        /// <summary>
        /// Test the property 'OrderBuyerMobilePhone'
        /// </summary>
        [Test]
        public void OrderBuyerMobilePhoneTest()
        {
            // TODO unit test for the property 'OrderBuyerMobilePhone'
        }
        /// <summary>
        /// Test the property 'OrderOrderSourceUri'
        /// </summary>
        [Test]
        public void OrderOrderSourceUriTest()
        {
            // TODO unit test for the property 'OrderOrderSourceUri'
        }
        /// <summary>
        /// Test the property 'OrderOrderItemsSourceUri'
        /// </summary>
        [Test]
        public void OrderOrderItemsSourceUriTest()
        {
            // TODO unit test for the property 'OrderOrderItemsSourceUri'
        }
        /// <summary>
        /// Test the property 'OrderItems'
        /// </summary>
        [Test]
        public void OrderItemsTest()
        {
            // TODO unit test for the property 'OrderItems'
        }
        /// <summary>
        /// Test the property 'TransitionLinks'
        /// </summary>
        [Test]
        public void TransitionLinksTest()
        {
            // TODO unit test for the property 'TransitionLinks'
        }

    }

}
