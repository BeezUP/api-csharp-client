/* 
 * Channels
 *
 * This api allows you to get access to your channels
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ChannelInfo
    /// </summary>
    [DataContract]
    public partial class ChannelInfo :  IEquatable<ChannelInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChannelInfo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChannelInfo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChannelInfo" /> class.
        /// </summary>
        /// <param name="ChannelId">ChannelId (required).</param>
        /// <param name="ChannelName">ChannelName (required).</param>
        /// <param name="ChannelLogoUrl">ChannelLogoUrl.</param>
        /// <param name="ChannelDescription">Indicae a description to the channel.</param>
        /// <param name="BeezUPOffer">Indicate the BeezUP offer.</param>
        /// <param name="SalesContact">SalesContact.</param>
        /// <param name="Details">Details.</param>
        /// <param name="KeyNumbers">KeyNumbers.</param>
        /// <param name="TechnicalContact">TechnicalContact.</param>
        public ChannelInfo(BeezUPCommonChannelId ChannelId = default(BeezUPCommonChannelId), BeezUPCommonChannelName ChannelName = default(BeezUPCommonChannelName), BeezUPCommonHttpUrl ChannelLogoUrl = default(BeezUPCommonHttpUrl), string ChannelDescription = default(string), string BeezUPOffer = default(string), ChannelInfoSalesContact SalesContact = default(ChannelInfoSalesContact), ChannelInfoDetails Details = default(ChannelInfoDetails), ChannelInfoKeyNumbers KeyNumbers = default(ChannelInfoKeyNumbers), ChannelInfoTechnicalContact TechnicalContact = default(ChannelInfoTechnicalContact))
        {
            // to ensure "ChannelId" is required (not null)
            if (ChannelId == null)
            {
                throw new InvalidDataException("ChannelId is a required property for ChannelInfo and cannot be null");
            }
            else
            {
                this.ChannelId = ChannelId;
            }
            // to ensure "ChannelName" is required (not null)
            if (ChannelName == null)
            {
                throw new InvalidDataException("ChannelName is a required property for ChannelInfo and cannot be null");
            }
            else
            {
                this.ChannelName = ChannelName;
            }
            this.ChannelLogoUrl = ChannelLogoUrl;
            this.ChannelDescription = ChannelDescription;
            this.BeezUPOffer = BeezUPOffer;
            this.SalesContact = SalesContact;
            this.Details = Details;
            this.KeyNumbers = KeyNumbers;
            this.TechnicalContact = TechnicalContact;
        }
        
        /// <summary>
        /// Gets or Sets ChannelId
        /// </summary>
        [DataMember(Name="channelId", EmitDefaultValue=false)]
        public BeezUPCommonChannelId ChannelId { get; set; }
        /// <summary>
        /// Gets or Sets ChannelName
        /// </summary>
        [DataMember(Name="channelName", EmitDefaultValue=false)]
        public BeezUPCommonChannelName ChannelName { get; set; }
        /// <summary>
        /// Gets or Sets ChannelLogoUrl
        /// </summary>
        [DataMember(Name="channelLogoUrl", EmitDefaultValue=false)]
        public BeezUPCommonHttpUrl ChannelLogoUrl { get; set; }
        /// <summary>
        /// Indicae a description to the channel
        /// </summary>
        /// <value>Indicae a description to the channel</value>
        [DataMember(Name="channelDescription", EmitDefaultValue=false)]
        public string ChannelDescription { get; set; }
        /// <summary>
        /// Indicate the BeezUP offer
        /// </summary>
        /// <value>Indicate the BeezUP offer</value>
        [DataMember(Name="beezUPOffer", EmitDefaultValue=false)]
        public string BeezUPOffer { get; set; }
        /// <summary>
        /// Gets or Sets SalesContact
        /// </summary>
        [DataMember(Name="salesContact", EmitDefaultValue=false)]
        public ChannelInfoSalesContact SalesContact { get; set; }
        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name="details", EmitDefaultValue=false)]
        public ChannelInfoDetails Details { get; set; }
        /// <summary>
        /// Gets or Sets KeyNumbers
        /// </summary>
        [DataMember(Name="keyNumbers", EmitDefaultValue=false)]
        public ChannelInfoKeyNumbers KeyNumbers { get; set; }
        /// <summary>
        /// Gets or Sets TechnicalContact
        /// </summary>
        [DataMember(Name="technicalContact", EmitDefaultValue=false)]
        public ChannelInfoTechnicalContact TechnicalContact { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChannelInfo {\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  ChannelName: ").Append(ChannelName).Append("\n");
            sb.Append("  ChannelLogoUrl: ").Append(ChannelLogoUrl).Append("\n");
            sb.Append("  ChannelDescription: ").Append(ChannelDescription).Append("\n");
            sb.Append("  BeezUPOffer: ").Append(BeezUPOffer).Append("\n");
            sb.Append("  SalesContact: ").Append(SalesContact).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  KeyNumbers: ").Append(KeyNumbers).Append("\n");
            sb.Append("  TechnicalContact: ").Append(TechnicalContact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ChannelInfo);
        }

        /// <summary>
        /// Returns true if ChannelInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of ChannelInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChannelInfo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ChannelId == other.ChannelId ||
                    this.ChannelId != null &&
                    this.ChannelId.Equals(other.ChannelId)
                ) && 
                (
                    this.ChannelName == other.ChannelName ||
                    this.ChannelName != null &&
                    this.ChannelName.Equals(other.ChannelName)
                ) && 
                (
                    this.ChannelLogoUrl == other.ChannelLogoUrl ||
                    this.ChannelLogoUrl != null &&
                    this.ChannelLogoUrl.Equals(other.ChannelLogoUrl)
                ) && 
                (
                    this.ChannelDescription == other.ChannelDescription ||
                    this.ChannelDescription != null &&
                    this.ChannelDescription.Equals(other.ChannelDescription)
                ) && 
                (
                    this.BeezUPOffer == other.BeezUPOffer ||
                    this.BeezUPOffer != null &&
                    this.BeezUPOffer.Equals(other.BeezUPOffer)
                ) && 
                (
                    this.SalesContact == other.SalesContact ||
                    this.SalesContact != null &&
                    this.SalesContact.Equals(other.SalesContact)
                ) && 
                (
                    this.Details == other.Details ||
                    this.Details != null &&
                    this.Details.Equals(other.Details)
                ) && 
                (
                    this.KeyNumbers == other.KeyNumbers ||
                    this.KeyNumbers != null &&
                    this.KeyNumbers.Equals(other.KeyNumbers)
                ) && 
                (
                    this.TechnicalContact == other.TechnicalContact ||
                    this.TechnicalContact != null &&
                    this.TechnicalContact.Equals(other.TechnicalContact)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ChannelId != null)
                    hash = hash * 59 + this.ChannelId.GetHashCode();
                if (this.ChannelName != null)
                    hash = hash * 59 + this.ChannelName.GetHashCode();
                if (this.ChannelLogoUrl != null)
                    hash = hash * 59 + this.ChannelLogoUrl.GetHashCode();
                if (this.ChannelDescription != null)
                    hash = hash * 59 + this.ChannelDescription.GetHashCode();
                if (this.BeezUPOffer != null)
                    hash = hash * 59 + this.BeezUPOffer.GetHashCode();
                if (this.SalesContact != null)
                    hash = hash * 59 + this.SalesContact.GetHashCode();
                if (this.Details != null)
                    hash = hash * 59 + this.Details.GetHashCode();
                if (this.KeyNumbers != null)
                    hash = hash * 59 + this.KeyNumbers.GetHashCode();
                if (this.TechnicalContact != null)
                    hash = hash * 59 + this.TechnicalContact.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
